{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/User/Desktop/REACT/mernChat/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/User/Desktop/REACT/mernChat/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\REACT\\\\mernChat\\\\pages\\\\notifications.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Feed, Segment, Divider, Container } from 'semantic-ui-react';\nimport axios from 'axios';\nimport baseUrl from '../utils/baseUrl';\nimport { parseCookies } from 'nookies';\nimport cookie from 'js-cookie';\nimport { NoNotifications } from '../components/Layout/NoData';\nimport LikeNotification from '../components/Notifications/LikeNotifications';\nimport CommentNotification from '../components/Notifications/CommentNotifications';\nimport FollowerNotification from '../components/Notifications/FollowNotifications';\n\nfunction Notifications(_ref) {\n  _s();\n\n  var _this = this;\n\n  var notifications = _ref.notifications,\n      errorLoading = _ref.errorLoading,\n      user = _ref.user,\n      userFollowStats = _ref.userFollowStats;\n\n  var _useState = useState(userFollowStats),\n      loggedUserFollowStats = _useState[0],\n      setUserFollowStats = _useState[1];\n\n  useEffect(function () {\n    var notificationRead = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.post(\"\".concat(baseUrl, \"/api/notifications\"), {}, {\n                  headers: {\n                    Authorization: cookie.get('token')\n                  }\n                });\n\n              case 3:\n                _context.next = 8;\n                break;\n\n              case 5:\n                _context.prev = 5;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 5]]);\n      }));\n\n      return function notificationRead() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    notificationRead();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Container, {\n    style: {\n      marginTop: '1.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, notifications.length > 0 ? __jsx(Segment, {\n    color: \"teal\",\n    raised: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: {\n      maxHeight: '40rem',\n      overflow: 'auto',\n      height: '40rem',\n      position: 'relative',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(Feed, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, notifications.map(function (notification) {\n    return __jsx(React.Fragment, null, notification.type === 'newLike' && notification.post !== null && __jsx(LikeNotification, {\n      key: notification._id,\n      notification: notification,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }), notification.type === 'newComment' && notification.post !== null && __jsx(CommentNotification, {\n      key: notification._id,\n      notification: notification,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }), notification.type === 'newFollower' && __jsx(FollowerNotification, {\n      key: notification._id,\n      notification: notification,\n      loggedUserFollowStats: loggedUserFollowStats,\n      setUserFollowStats: setUserFollowStats,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 23\n      }\n    }));\n  })))) : __jsx(NoNotifications, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), __jsx(Divider, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(Notifications, \"irkBQEWNNPTO/zDe5zUefNWAEAk=\");\n\n_c = Notifications;\n\nNotifications.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ctx) {\n    var _parseCookies, token, res;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _parseCookies = parseCookies(ctx), token = _parseCookies.token;\n            _context2.next = 4;\n            return axios.get(\"\".concat(baseUrl, \"/api/notifications\"), {\n              headers: {\n                Authorization: token\n              }\n            });\n\n          case 4:\n            res = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              notifications: res.data\n            });\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            return _context2.abrupt(\"return\", {\n              errorLoading: true\n            });\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 8]]);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Notifications;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"sources":["C:/Users/User/Desktop/REACT/mernChat/pages/notifications.js"],"names":["React","useEffect","useState","Feed","Segment","Divider","Container","axios","baseUrl","parseCookies","cookie","NoNotifications","LikeNotification","CommentNotification","FollowerNotification","Notifications","notifications","errorLoading","user","userFollowStats","loggedUserFollowStats","setUserFollowStats","notificationRead","post","headers","Authorization","get","console","log","marginTop","length","maxHeight","overflow","height","position","width","map","notification","type","_id","getInitialProps","ctx","token","res","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Feed, Segment, Divider, Container } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport baseUrl from '../utils/baseUrl';\r\nimport { parseCookies } from 'nookies';\r\nimport cookie from 'js-cookie';\r\nimport { NoNotifications } from '../components/Layout/NoData';\r\nimport LikeNotification from '../components/Notifications/LikeNotifications';\r\nimport CommentNotification from '../components/Notifications/CommentNotifications';\r\nimport FollowerNotification from '../components/Notifications/FollowNotifications';\r\n\r\nfunction Notifications({ notifications, errorLoading, user, userFollowStats }) {\r\n  const [loggedUserFollowStats, setUserFollowStats] = useState(userFollowStats);\r\n\r\n  useEffect(() => {\r\n    const notificationRead = async () => {\r\n      try {\r\n        await axios.post(\r\n          `${baseUrl}/api/notifications`,\r\n          {},\r\n          { headers: { Authorization: cookie.get('token') } }\r\n        );\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    notificationRead();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container style={{ marginTop: '1.5rem' }}>\r\n        {notifications.length > 0 ? (\r\n          <Segment color=\"teal\" raised>\r\n            <div\r\n              style={{\r\n                maxHeight: '40rem',\r\n                overflow: 'auto',\r\n                height: '40rem',\r\n                position: 'relative',\r\n                width: '100%',\r\n              }}\r\n            >\r\n              <Feed size=\"small\">\r\n                {notifications.map((notification) => (\r\n                  <>\r\n                    {notification.type === 'newLike' &&\r\n                      notification.post !== null && (\r\n                        <LikeNotification\r\n                          key={notification._id}\r\n                          notification={notification}\r\n                        />\r\n                      )}\r\n\r\n                    {notification.type === 'newComment' &&\r\n                      notification.post !== null && (\r\n                        <CommentNotification\r\n                          key={notification._id}\r\n                          notification={notification}\r\n                        />\r\n                      )}\r\n\r\n                    {notification.type === 'newFollower' && (\r\n                      <FollowerNotification\r\n                        key={notification._id}\r\n                        notification={notification}\r\n                        loggedUserFollowStats={loggedUserFollowStats}\r\n                        setUserFollowStats={setUserFollowStats}\r\n                      />\r\n                    )}\r\n                  </>\r\n                ))}\r\n              </Feed>\r\n            </div>\r\n          </Segment>\r\n        ) : (\r\n          <NoNotifications />\r\n        )}\r\n\r\n        <Divider hidden />\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nNotifications.getInitialProps = async (ctx) => {\r\n  try {\r\n    const { token } = parseCookies(ctx);\r\n\r\n    const res = await axios.get(`${baseUrl}/api/notifications`, {\r\n      headers: { Authorization: token },\r\n    });\r\n\r\n    return { notifications: res.data };\r\n  } catch (error) {\r\n    return { errorLoading: true };\r\n  }\r\n};\r\n\r\nexport default Notifications;\r\n"]},"metadata":{},"sourceType":"module"}