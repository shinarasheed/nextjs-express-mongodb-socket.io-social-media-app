{"ast":null,"code":"var mongoose = require(\"mongoose\");\n\nvar Schema = mongoose.Schema;\nvar UserSchema = new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true,\n    select: false\n  },\n  username: {\n    type: String,\n    required: true,\n    unique: true,\n    trim: true\n  },\n  profilePicUrl: {\n    type: String\n  },\n  newMessagePopup: {\n    type: Boolean,\n    \"default\": true\n  },\n  unreadMessage: {\n    type: Boolean,\n    \"default\": false\n  },\n  unreadNotification: {\n    type: Boolean,\n    \"default\": false\n  },\n  role: {\n    type: String,\n    \"default\": \"user\",\n    \"enum\": [\"user\", \"root\"]\n  },\n  resetToken: {\n    type: String\n  },\n  expireToken: {\n    type: Date\n  }\n}, {\n  timestamps: true\n});\nmodule.exports = mongoose.model(\"User\", UserSchema);","map":{"version":3,"sources":["C:/Users/User/Desktop/REACT/mernChat/models/UserModel.js"],"names":["mongoose","require","Schema","UserSchema","name","type","String","required","email","unique","password","select","username","trim","profilePicUrl","newMessagePopup","Boolean","unreadMessage","unreadNotification","role","resetToken","expireToken","Date","timestamps","module","exports","model"],"mappings":"AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,IAAMC,UAAU,GAAG,IAAID,MAAJ,CACjB;AACEE,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GADR;AAGEC,EAAAA,KAAK,EAAE;AAAEH,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE,IAA1B;AAAgCE,IAAAA,MAAM,EAAE;AAAxC,GAHT;AAKEC,EAAAA,QAAQ,EAAE;AAAEL,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE,IAA1B;AAAgCI,IAAAA,MAAM,EAAE;AAAxC,GALZ;AAOEC,EAAAA,QAAQ,EAAE;AAAEP,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE,IAA1B;AAAgCE,IAAAA,MAAM,EAAE,IAAxC;AAA8CI,IAAAA,IAAI,EAAE;AAApD,GAPZ;AASEC,EAAAA,aAAa,EAAE;AAAET,IAAAA,IAAI,EAAEC;AAAR,GATjB;AAWES,EAAAA,eAAe,EAAE;AAAEV,IAAAA,IAAI,EAAEW,OAAR;AAAiB,eAAS;AAA1B,GAXnB;AAaEC,EAAAA,aAAa,EAAE;AAAEZ,IAAAA,IAAI,EAAEW,OAAR;AAAiB,eAAS;AAA1B,GAbjB;AAeEE,EAAAA,kBAAkB,EAAE;AAAEb,IAAAA,IAAI,EAAEW,OAAR;AAAiB,eAAS;AAA1B,GAftB;AAiBEG,EAAAA,IAAI,EAAE;AAAEd,IAAAA,IAAI,EAAEC,MAAR;AAAgB,eAAS,MAAzB;AAAiC,YAAM,CAAC,MAAD,EAAS,MAAT;AAAvC,GAjBR;AAmBEc,EAAAA,UAAU,EAAE;AAAEf,IAAAA,IAAI,EAAEC;AAAR,GAnBd;AAqBEe,EAAAA,WAAW,EAAE;AAAEhB,IAAAA,IAAI,EAAEiB;AAAR;AArBf,CADiB,EAwBjB;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAxBiB,CAAnB;AA2BAC,MAAM,CAACC,OAAP,GAAiBzB,QAAQ,CAAC0B,KAAT,CAAe,MAAf,EAAuBvB,UAAvB,CAAjB","sourcesContent":["const mongoose = require(\"mongoose\");\r\nconst Schema = mongoose.Schema;\r\n\r\nconst UserSchema = new Schema(\r\n  {\r\n    name: { type: String, required: true },\r\n\r\n    email: { type: String, required: true, unique: true },\r\n\r\n    password: { type: String, required: true, select: false },\r\n\r\n    username: { type: String, required: true, unique: true, trim: true },\r\n\r\n    profilePicUrl: { type: String },\r\n\r\n    newMessagePopup: { type: Boolean, default: true },\r\n\r\n    unreadMessage: { type: Boolean, default: false },\r\n\r\n    unreadNotification: { type: Boolean, default: false },\r\n\r\n    role: { type: String, default: \"user\", enum: [\"user\", \"root\"] },\r\n\r\n    resetToken: { type: String },\r\n\r\n    expireToken: { type: Date }\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nmodule.exports = mongoose.model(\"User\", UserSchema);\r\n"]},"metadata":{},"sourceType":"script"}