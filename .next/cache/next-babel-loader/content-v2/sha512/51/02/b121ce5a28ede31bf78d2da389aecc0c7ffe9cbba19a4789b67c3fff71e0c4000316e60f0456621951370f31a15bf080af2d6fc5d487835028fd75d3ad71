{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ADVANCED REACT\\\\mernChat\\\\pages\\\\[username].js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport baseUrl from '../utils/baseUrl';\nimport { parseCookies } from 'nookies';\nimport cookie from 'js-cookie';\nimport { Grid } from 'semantic-ui-react';\nimport { NoProfile, NoProfilePosts } from '../components/Layout/NoData';\nimport ProfileMenuTabs from '../components/Profile/ProfileMenuTabs';\nimport ProfileHeader from '../components/Profile/ProfileHeader';\nimport CardPost from '../components/Post/CardPost';\nimport { PlaceHolderPosts } from '../components/Layout/PlaceHolderGroup';\nimport { PostDeleteToastr } from '../components/Layout/Toastr';\nimport Followers from '../components/Profile/Followers';\n\nconst ProfilePage = ({\n  profile,\n  followersLength,\n  followingLength,\n  errorLoading,\n  user,\n  userFollowStats\n}) => {\n  const router = useRouter();\n  const {\n    0: posts,\n    1: setPosts\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: activeItem,\n    1: setActiveItem\n  } = useState('profile');\n\n  const handleItemClick = item => setActiveItem(item);\n\n  const {\n    0: loggedUserFollowStats,\n    1: setUserFollowStats\n  } = useState(userFollowStats);\n  const {\n    0: showToastr,\n    1: setShowToastr\n  } = useState(false);\n  const ownAccount = profile.user._id === user._id;\n  useEffect(() => {\n    const getPosts = async () => {\n      setLoading(true);\n\n      try {\n        const {\n          username\n        } = router.query;\n        const token = cookie.get('token');\n        const res = await axios.get(`${baseUrl}/api/profile/posts/${username}`, {\n          headers: {\n            Authorization: token\n          }\n        });\n        setPosts(res.data);\n      } catch (error) {\n        console.log('Error Loading Post');\n      }\n\n      setLoading(false);\n    };\n\n    getPosts();\n  }, [router.query.username]);\n  useEffect(() => {\n    showToastr && setTimeout(() => setShowToastr(false), 3000);\n  }, [showToastr]);\n  if (errorLoading) return __jsx(NoProfile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 28\n    }\n  });\n  return __jsx(React.Fragment, null, showToastr && __jsx(PostDeleteToastr, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 22\n    }\n  }), __jsx(Grid, {\n    stackable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, __jsx(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, __jsx(ProfileMenuTabs, {\n    activeItem: activeItem,\n    handleItemClick: handleItemClick,\n    followersLength: followersLength,\n    followingLength: followingLength,\n    ownAccount: ownAccount,\n    loggedUserFollowStats: loggedUserFollowStats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, __jsx(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, activeItem === 'profile' && __jsx(React.Fragment, null, __jsx(ProfileHeader, {\n    profile: profile,\n    ownAccount: ownAccount,\n    loggedUserFollowStats: loggedUserFollowStats,\n    setUserFollowStats: setUserFollowStats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), loading ? __jsx(PlaceHolderPosts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }) : posts.length > 0 ? posts.map(post => __jsx(CardPost, {\n    key: post._id,\n    post: post,\n    user: user,\n    setPosts: setPosts,\n    setShowToastr: setShowToastr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  })) : __jsx(NoProfilePosts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  })), activeItem === 'followers' && __jsx(Followers, {\n    user: user,\n    loggedUserFollowStats: loggedUserFollowStats,\n    setUserFollowStats: setUserFollowStats,\n    profileUserId: profile.user._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  })))));\n}; //get serversideProps instead\n\n\nProfilePage.getInitialProps = async ctx => {\n  try {\n    const {\n      username\n    } = ctx.query;\n    const {\n      token\n    } = parseCookies(ctx);\n    const res = await axios.get(`${baseUrl}/api/profile/${username}`, {\n      headers: {\n        Authorization: token\n      }\n    });\n    const {\n      profile,\n      followersLength,\n      followingLength\n    } = res.data;\n    return {\n      profile,\n      followersLength,\n      followingLength\n    };\n  } catch (error) {\n    return {\n      errorLoading: true\n    };\n  }\n};\n\nexport default ProfilePage;","map":{"version":3,"sources":["C:/Users/User/Desktop/ADVANCED REACT/mernChat/pages/[username].js"],"names":["React","useState","useEffect","useRouter","axios","baseUrl","parseCookies","cookie","Grid","NoProfile","NoProfilePosts","ProfileMenuTabs","ProfileHeader","CardPost","PlaceHolderPosts","PostDeleteToastr","Followers","ProfilePage","profile","followersLength","followingLength","errorLoading","user","userFollowStats","router","posts","setPosts","loading","setLoading","activeItem","setActiveItem","handleItemClick","item","loggedUserFollowStats","setUserFollowStats","showToastr","setShowToastr","ownAccount","_id","getPosts","username","query","token","get","res","headers","Authorization","data","error","console","log","setTimeout","length","map","post","getInitialProps","ctx"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport axios from 'axios';\r\nimport baseUrl from '../utils/baseUrl';\r\nimport { parseCookies } from 'nookies';\r\nimport cookie from 'js-cookie';\r\nimport { Grid } from 'semantic-ui-react';\r\n\r\nimport { NoProfile, NoProfilePosts } from '../components/Layout/NoData';\r\nimport ProfileMenuTabs from '../components/Profile/ProfileMenuTabs';\r\nimport ProfileHeader from '../components/Profile/ProfileHeader';\r\nimport CardPost from '../components/Post/CardPost';\r\nimport { PlaceHolderPosts } from '../components/Layout/PlaceHolderGroup';\r\nimport { PostDeleteToastr } from '../components/Layout/Toastr';\r\nimport Followers from '../components/Profile/Followers';\r\n\r\nconst ProfilePage = ({\r\n  profile,\r\n  followersLength,\r\n  followingLength,\r\n  errorLoading,\r\n  user,\r\n  userFollowStats,\r\n}) => {\r\n  const router = useRouter();\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activeItem, setActiveItem] = useState('profile');\r\n  const handleItemClick = (item) => setActiveItem(item);\r\n  const [loggedUserFollowStats, setUserFollowStats] = useState(userFollowStats);\r\n\r\n  const [showToastr, setShowToastr] = useState(false);\r\n  const ownAccount = profile.user._id === user._id;\r\n\r\n  useEffect(() => {\r\n    const getPosts = async () => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const { username } = router.query;\r\n        const token = cookie.get('token');\r\n\r\n        const res = await axios.get(\r\n          `${baseUrl}/api/profile/posts/${username}`,\r\n          { headers: { Authorization: token } }\r\n        );\r\n\r\n        setPosts(res.data);\r\n      } catch (error) {\r\n        console.log('Error Loading Post');\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    getPosts();\r\n  }, [router.query.username]);\r\n\r\n  useEffect(() => {\r\n    showToastr && setTimeout(() => setShowToastr(false), 3000);\r\n  }, [showToastr]);\r\n\r\n  if (errorLoading) return <NoProfile />;\r\n  return (\r\n    <>\r\n      {showToastr && <PostDeleteToastr />}\r\n      <Grid stackable>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <ProfileMenuTabs\r\n              activeItem={activeItem}\r\n              handleItemClick={handleItemClick}\r\n              followersLength={followersLength}\r\n              followingLength={followingLength}\r\n              ownAccount={ownAccount}\r\n              loggedUserFollowStats={loggedUserFollowStats}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            {activeItem === 'profile' && (\r\n              <>\r\n                <ProfileHeader\r\n                  profile={profile}\r\n                  ownAccount={ownAccount}\r\n                  loggedUserFollowStats={loggedUserFollowStats}\r\n                  setUserFollowStats={setUserFollowStats}\r\n                />\r\n\r\n                {loading ? (\r\n                  <PlaceHolderPosts />\r\n                ) : posts.length > 0 ? (\r\n                  posts.map((post) => (\r\n                    <CardPost\r\n                      key={post._id}\r\n                      post={post}\r\n                      user={user}\r\n                      setPosts={setPosts}\r\n                      setShowToastr={setShowToastr}\r\n                    />\r\n                  ))\r\n                ) : (\r\n                  <NoProfilePosts />\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            {activeItem === 'followers' && (\r\n              <Followers\r\n                user={user}\r\n                loggedUserFollowStats={loggedUserFollowStats}\r\n                setUserFollowStats={setUserFollowStats}\r\n                profileUserId={profile.user._id}\r\n              />\r\n            )}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\n//get serversideProps instead\r\nProfilePage.getInitialProps = async (ctx) => {\r\n  try {\r\n    const { username } = ctx.query;\r\n    const { token } = parseCookies(ctx);\r\n\r\n    const res = await axios.get(`${baseUrl}/api/profile/${username}`, {\r\n      headers: { Authorization: token },\r\n    });\r\n\r\n    const { profile, followersLength, followingLength } = res.data;\r\n\r\n    return {\r\n      profile,\r\n      followersLength,\r\n      followingLength,\r\n    };\r\n  } catch (error) {\r\n    return { errorLoading: true };\r\n  }\r\n};\r\n\r\nexport default ProfilePage;\r\n"]},"metadata":{},"sourceType":"module"}