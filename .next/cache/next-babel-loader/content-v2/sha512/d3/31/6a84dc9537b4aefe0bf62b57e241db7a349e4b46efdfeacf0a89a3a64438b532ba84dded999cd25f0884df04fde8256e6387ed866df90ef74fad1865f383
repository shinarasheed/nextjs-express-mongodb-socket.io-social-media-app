{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\REACT\\\\mernChat\\\\components\\\\Post\\\\NoImageModal.js\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Modal, Grid, Image, Card, Icon, Divider } from 'semantic-ui-react';\nimport PostComments from './PostComments';\nimport CommentInputField from './CommentInputField';\nimport calculateTime from '../../utils/calculateTime';\nimport Link from 'next/link';\nimport { likePost } from '../../utils/postActions';\nimport LikesList from './LikesList';\n\nvar NoImageModal = function NoImageModal(_ref) {\n  var post = _ref.post,\n      user = _ref.user,\n      setLikes = _ref.setLikes,\n      likes = _ref.likes,\n      isLiked = _ref.isLiked,\n      comments = _ref.comments,\n      setComments = _ref.setComments;\n  return __jsx(Card, {\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(Card.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(Image, {\n    floated: \"left\",\n    avatar: true,\n    src: post.user.profilePicUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), __jsx(Card.Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/\".concat(post.user.username),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, post.user.name))), __jsx(Card.Meta, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, calculateTime(post.createdAt)), post.location && __jsx(Card.Meta, {\n    content: post.location,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 27\n    }\n  }), __jsx(Card.Description, {\n    style: {\n      fontSize: '17px',\n      letterSpacing: '0.1px',\n      wordSpacing: '0.35px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, post.text)), __jsx(Card.Content, {\n    extra: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(Icon, {\n    name: isLiked ? 'heart' : 'heart outline',\n    color: \"red\",\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: function onClick() {\n      return likePost(post._id, user._id, setLikes, isLiked ? false : true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), __jsx(LikesList, {\n    postId: post._id,\n    trigger: likes.length > 0 && __jsx(\"span\", {\n      className: \"spanLikesList\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, \"\".concat(likes.length, \"  \").concat(likes.length === 1 ? 'like' : 'likes')),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), __jsx(Divider, {\n    hidden: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    style: {\n      overflow: 'auto',\n      height: comments.length > 2 ? '200px' : '60px',\n      marginBottom: '8px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, comments.length > 0 && comments.map(function (comment, i) {\n    return __jsx(PostComments, {\n      key: comment._id,\n      comment: comment,\n      postId: post._id,\n      user: user,\n      setComments: setComments,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    });\n  })), __jsx(CommentInputField, {\n    postId: post._id,\n    user: user,\n    setComments: setComments,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  })));\n};\n\n_c = NoImageModal;\nexport default NoImageModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoImageModal\");","map":{"version":3,"sources":["C:/Users/User/Desktop/REACT/mernChat/components/Post/NoImageModal.js"],"names":["React","Modal","Grid","Image","Card","Icon","Divider","PostComments","CommentInputField","calculateTime","Link","likePost","LikesList","NoImageModal","post","user","setLikes","likes","isLiked","comments","setComments","profilePicUrl","username","name","createdAt","location","fontSize","letterSpacing","wordSpacing","text","cursor","_id","length","overflow","height","marginBottom","map","comment","i"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Modal, Grid, Image, Card, Icon, Divider } from 'semantic-ui-react';\r\nimport PostComments from './PostComments';\r\nimport CommentInputField from './CommentInputField';\r\nimport calculateTime from '../../utils/calculateTime';\r\nimport Link from 'next/link';\r\nimport { likePost } from '../../utils/postActions';\r\nimport LikesList from './LikesList';\r\n\r\nconst NoImageModal = ({\r\n  post,\r\n  user,\r\n  setLikes,\r\n  likes,\r\n  isLiked,\r\n  comments,\r\n  setComments,\r\n}) => {\r\n  return (\r\n    <Card fluid>\r\n      <Card.Content>\r\n        <Image floated=\"left\" avatar src={post.user.profilePicUrl} />\r\n\r\n        <Card.Header>\r\n          <Link href={`/${post.user.username}`}>\r\n            <a>{post.user.name}</a>\r\n          </Link>\r\n        </Card.Header>\r\n\r\n        <Card.Meta>{calculateTime(post.createdAt)}</Card.Meta>\r\n\r\n        {post.location && <Card.Meta content={post.location} />}\r\n\r\n        <Card.Description\r\n          style={{\r\n            fontSize: '17px',\r\n            letterSpacing: '0.1px',\r\n            wordSpacing: '0.35px',\r\n          }}\r\n        >\r\n          {post.text}\r\n        </Card.Description>\r\n      </Card.Content>\r\n\r\n      <Card.Content extra>\r\n        <Icon\r\n          name={isLiked ? 'heart' : 'heart outline'}\r\n          color=\"red\"\r\n          style={{ cursor: 'pointer' }}\r\n          onClick={() =>\r\n            likePost(post._id, user._id, setLikes, isLiked ? false : true)\r\n          }\r\n        />\r\n\r\n        <LikesList\r\n          postId={post._id}\r\n          trigger={\r\n            likes.length > 0 && (\r\n              <span className=\"spanLikesList\">\r\n                {`${likes.length}  ${likes.length === 1 ? 'like' : 'likes'}`}\r\n              </span>\r\n            )\r\n          }\r\n        />\r\n\r\n        <Divider hidden />\r\n\r\n        <div\r\n          style={{\r\n            overflow: 'auto',\r\n            height: comments.length > 2 ? '200px' : '60px',\r\n            marginBottom: '8px',\r\n          }}\r\n        >\r\n          {comments.length > 0 &&\r\n            comments.map((comment, i) => (\r\n              <PostComments\r\n                key={comment._id}\r\n                comment={comment}\r\n                postId={post._id}\r\n                user={user}\r\n                setComments={setComments}\r\n              />\r\n            ))}\r\n        </div>\r\n\r\n        <CommentInputField\r\n          postId={post._id}\r\n          user={user}\r\n          setComments={setComments}\r\n        />\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default NoImageModal;\r\n"]},"metadata":{},"sourceType":"module"}