{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ADVANCED REACT\\\\mernChat\\\\components\\\\Post\\\\CardPost.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Card, Icon, Image, Divider, Segment, Button, Popup, Header, Modal } from 'semantic-ui-react';\nimport PostComments from './PostComments';\nimport CommentInputField from './CommentInputField';\nimport calculateTime from '../../utils/calculateTime';\nimport Link from 'next/link';\n\nfunction CardPost({\n  post,\n  user,\n  setPosts,\n  setShowToastr\n}) {\n  const {\n    0: likes,\n    1: setLikes\n  } = useState(post.likes);\n  const isLiked = likes.length > 0 && likes.filter(like => like.user === user._id).length > 0;\n  const {\n    0: comments,\n    1: setComments\n  } = useState(post.comments);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: showModal,\n    1: setShowModal\n  } = useState(false);\n\n  const addPropsToModal = () => ({\n    post,\n    user,\n    setLikes,\n    likes,\n    isLiked,\n    comments,\n    setComments\n  });\n\n  return __jsx(React.Fragment, null, __jsx(Segment, {\n    basic: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(Card, {\n    color: \"teal\",\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, post.picUrl && __jsx(Image, {\n    src: post.picUrl,\n    style: {\n      cursor: 'pointer'\n    },\n    floated: \"left\",\n    wrapped: true,\n    ui: false,\n    alt: \"PostImage\",\n    onClick: () => setShowModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), __jsx(Card.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, __jsx(Image, {\n    floated: \"left\",\n    src: post.user.profilePicUrl,\n    avatar: true,\n    circular: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), (user.role === 'root' || post.user._id === user._id) && __jsx(React.Fragment, null, __jsx(Popup, {\n    on: \"click\",\n    position: \"top right\",\n    trigger: __jsx(Image, {\n      src: \"/deleteIcon.svg\",\n      style: {\n        cursor: 'pointer'\n      },\n      size: \"mini\",\n      floated: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, __jsx(Header, {\n    as: \"h4\",\n    content: \"Are you sure?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, \"This action is irreversible!\"), __jsx(Button, {\n    color: \"red\",\n    icon: \"trash\",\n    content: \"Delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }))), __jsx(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: `/${post.user.username}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, post.user.name))), __jsx(Card.Meta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, calculateTime(post.createdAt)), post.location && __jsx(Card.Meta, {\n    content: post.location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 31\n    }\n  }), __jsx(Card.Description, {\n    style: {\n      fontSize: '17px',\n      letterSpacing: '0.1px',\n      wordSpacing: '0.35px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, post.text)), __jsx(Card.Content, {\n    extra: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: isLiked ? 'heart' : 'heart outline',\n    color: \"red\",\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), __jsx(Icon, {\n    name: \"comment outline\",\n    style: {\n      marginLeft: '7px'\n    },\n    color: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), comments.length > 0 && comments.map((comment, i) => i < 3 && __jsx(PostComments, {\n    key: comment._id,\n    comment: comment,\n    postId: post._id,\n    user: user,\n    setComments: setComments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  })), comments.length > 3 && __jsx(Button, {\n    content: \"View More\",\n    color: \"teal\",\n    basic: true,\n    circular: true,\n    onClick: () => setShowModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }), __jsx(Divider, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }), __jsx(CommentInputField, {\n    user: user,\n    postId: post._id,\n    setComments: setComments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  })))), __jsx(Divider, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default CardPost;","map":{"version":3,"sources":["C:/Users/User/Desktop/ADVANCED REACT/mernChat/components/Post/CardPost.js"],"names":["React","useState","Card","Icon","Image","Divider","Segment","Button","Popup","Header","Modal","PostComments","CommentInputField","calculateTime","Link","CardPost","post","user","setPosts","setShowToastr","likes","setLikes","isLiked","length","filter","like","_id","comments","setComments","error","setError","showModal","setShowModal","addPropsToModal","picUrl","cursor","profilePicUrl","role","username","name","createdAt","location","fontSize","letterSpacing","wordSpacing","text","marginLeft","map","comment","i"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Card,\r\n  Icon,\r\n  Image,\r\n  Divider,\r\n  Segment,\r\n  Button,\r\n  Popup,\r\n  Header,\r\n  Modal,\r\n} from 'semantic-ui-react';\r\nimport PostComments from './PostComments';\r\nimport CommentInputField from './CommentInputField';\r\nimport calculateTime from '../../utils/calculateTime';\r\nimport Link from 'next/link';\r\n\r\nfunction CardPost({ post, user, setPosts, setShowToastr }) {\r\n  const [likes, setLikes] = useState(post.likes);\r\n\r\n  const isLiked =\r\n    likes.length > 0 &&\r\n    likes.filter((like) => like.user === user._id).length > 0;\r\n\r\n  const [comments, setComments] = useState(post.comments);\r\n\r\n  const [error, setError] = useState(null);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const addPropsToModal = () => ({\r\n    post,\r\n    user,\r\n    setLikes,\r\n    likes,\r\n    isLiked,\r\n    comments,\r\n    setComments,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Segment basic>\r\n        <Card color=\"teal\" fluid>\r\n          {post.picUrl && (\r\n            <Image\r\n              src={post.picUrl}\r\n              style={{ cursor: 'pointer' }}\r\n              floated=\"left\"\r\n              wrapped\r\n              ui={false}\r\n              alt=\"PostImage\"\r\n              onClick={() => setShowModal(true)}\r\n            />\r\n          )}\r\n\r\n          <Card.Content>\r\n            <Image\r\n              floated=\"left\"\r\n              src={post.user.profilePicUrl}\r\n              avatar\r\n              circular\r\n            />\r\n\r\n            {(user.role === 'root' || post.user._id === user._id) && (\r\n              <>\r\n                <Popup\r\n                  on=\"click\"\r\n                  position=\"top right\"\r\n                  trigger={\r\n                    <Image\r\n                      src=\"/deleteIcon.svg\"\r\n                      style={{ cursor: 'pointer' }}\r\n                      size=\"mini\"\r\n                      floated=\"right\"\r\n                    />\r\n                  }\r\n                >\r\n                  <Header as=\"h4\" content=\"Are you sure?\" />\r\n                  <p>This action is irreversible!</p>\r\n\r\n                  <Button color=\"red\" icon=\"trash\" content=\"Delete\" />\r\n                </Popup>\r\n              </>\r\n            )}\r\n\r\n            <Card.Header>\r\n              <Link href={`/${post.user.username}`}>\r\n                <a>{post.user.name}</a>\r\n              </Link>\r\n            </Card.Header>\r\n\r\n            <Card.Meta>{calculateTime(post.createdAt)}</Card.Meta>\r\n\r\n            {post.location && <Card.Meta content={post.location} />}\r\n\r\n            <Card.Description\r\n              style={{\r\n                fontSize: '17px',\r\n                letterSpacing: '0.1px',\r\n                wordSpacing: '0.35px',\r\n              }}\r\n            >\r\n              {post.text}\r\n            </Card.Description>\r\n          </Card.Content>\r\n\r\n          <Card.Content extra>\r\n            <Icon\r\n              name={isLiked ? 'heart' : 'heart outline'}\r\n              color=\"red\"\r\n              style={{ cursor: 'pointer' }}\r\n            />\r\n\r\n            <Icon\r\n              name=\"comment outline\"\r\n              style={{ marginLeft: '7px' }}\r\n              color=\"blue\"\r\n            />\r\n\r\n            {comments.length > 0 &&\r\n              comments.map(\r\n                (comment, i) =>\r\n                  i < 3 && (\r\n                    <PostComments\r\n                      key={comment._id}\r\n                      comment={comment}\r\n                      postId={post._id}\r\n                      user={user}\r\n                      setComments={setComments}\r\n                    />\r\n                  )\r\n              )}\r\n\r\n            {comments.length > 3 && (\r\n              <Button\r\n                content=\"View More\"\r\n                color=\"teal\"\r\n                basic\r\n                circular\r\n                onClick={() => setShowModal(true)}\r\n              />\r\n            )}\r\n\r\n            <Divider hidden />\r\n\r\n            <CommentInputField\r\n              user={user}\r\n              postId={post._id}\r\n              setComments={setComments}\r\n            />\r\n          </Card.Content>\r\n        </Card>\r\n      </Segment>\r\n      <Divider hidden />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardPost;\r\n"]},"metadata":{},"sourceType":"module"}