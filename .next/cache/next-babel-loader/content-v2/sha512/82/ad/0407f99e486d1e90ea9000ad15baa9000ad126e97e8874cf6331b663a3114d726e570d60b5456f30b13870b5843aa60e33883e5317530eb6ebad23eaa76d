{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ADVANCED REACT\\\\mernChat\\\\components\\\\Post\\\\CreatePost.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useRef } from 'react';\nimport { Form, Button, Image, Divider, Message, Icon } from 'semantic-ui-react';\nimport uploadPic from '../../utils/uploadPicToCloudinary';\n\nconst CreatePost = ({\n  user,\n  setPosts\n}) => {\n  const {\n    0: newPost,\n    1: setNewPost\n  } = useState({\n    text: '',\n    location: ''\n  });\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const inputRef = useRef();\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: highlighted,\n    1: setHighlighted\n  } = useState(false);\n  const {\n    0: media,\n    1: setMedia\n  } = useState(null);\n  const {\n    0: mediaPreview,\n    1: setMediaPreview\n  } = useState(null);\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n\n    if (name === 'media') {\n      setMedia(files[0]);\n      setMediaPreview(URL.createObjectURL(files[0]));\n    } //this is can be done differently though\n\n\n    setNewPost(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    error: error !== null,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(Message, {\n    error: true,\n    onDismiss: () => setError(null),\n    content: error,\n    header: \"Oops!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, __jsx(Image, {\n    src: user.profilePicUrl,\n    circular: true,\n    avatar: true,\n    inline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), __jsx(Form.TextArea, {\n    placeholder: \"What is happening\",\n    name: \"text\",\n    value: newPost.text,\n    onChange: handleChange,\n    rows: 4,\n    width: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Input, {\n    value: newPost.location,\n    name: \"location\",\n    onChange: handleChange,\n    label: \"Add Location\",\n    icon: \"map marker alternate\",\n    placeholder: \"Want to add location?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), __jsx(\"input\", {\n    ref: inputRef,\n    onChange: handleChange,\n    name: \"media\",\n    style: {\n      display: 'none'\n    },\n    type: \"file\",\n    accept: \"image/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    style: {\n      textAlign: 'center',\n      height: '150px',\n      width: '150px',\n      border: 'dotted',\n      paddingTop: media === null && '60px',\n      cursor: 'pointer',\n      borderBlock: highlighted ? 'green' : 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, media === null ? __jsx(Icon, {\n    name: \"plus\",\n    onClick: () => inputRef.current.click(),\n    size: \"big\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }) : __jsx(React.Fragment, null, __jsx(Image, {\n    style: {\n      height: '150px',\n      width: '150px'\n    },\n    src: mediaPreview,\n    alt: \"PostImage\",\n    centered: true,\n    size: \"medium\",\n    onClick: () => inputRef.current.click(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }))), __jsx(Divider, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    circular: true,\n    disabled: newPost.text === '' || loading,\n    content: __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 20\n      }\n    }, \"Post\"),\n    style: {\n      backgroundColor: '#1DA1F2',\n      color: 'white'\n    },\n    icon: \"send\",\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  })), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CreatePost;","map":{"version":3,"sources":["C:/Users/User/Desktop/ADVANCED REACT/mernChat/components/Post/CreatePost.js"],"names":["React","useState","useRef","Form","Button","Image","Divider","Message","Icon","uploadPic","CreatePost","user","setPosts","newPost","setNewPost","text","location","loading","setLoading","inputRef","error","setError","highlighted","setHighlighted","media","setMedia","mediaPreview","setMediaPreview","handleChange","e","name","value","files","target","URL","createObjectURL","prevState","handleSubmit","preventDefault","profilePicUrl","display","textAlign","height","width","border","paddingTop","cursor","borderBlock","current","click","backgroundColor","color"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,OAA9B,EAAuCC,OAAvC,EAAgDC,IAAhD,QAA4D,mBAA5D;AACA,OAAOC,SAAP,MAAsB,mCAAtB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAwB;AACzC,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBb,QAAQ,CAAC;AACrCc,IAAAA,IAAI,EAAE,EAD+B;AAErCC,IAAAA,QAAQ,EAAE;AAF2B,GAAD,CAAtC;AAIA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBjB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMkB,QAAQ,GAAGjB,MAAM,EAAvB;AAEA,QAAM;AAAA,OAACkB,KAAD;AAAA,OAAQC;AAAR,MAAoBpB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAACqB,WAAD;AAAA,OAAcC;AAAd,MAAgCtB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAA,OAACuB,KAAD;AAAA,OAAQC;AAAR,MAAoBxB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAACyB,YAAD;AAAA,OAAeC;AAAf,MAAkC1B,QAAQ,CAAC,IAAD,CAAhD;;AAEA,QAAM2B,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,QAAyBH,CAAC,CAACI,MAAjC;;AAEA,QAAIH,IAAI,KAAK,OAAb,EAAsB;AACpBL,MAAAA,QAAQ,CAACO,KAAK,CAAC,CAAD,CAAN,CAAR;AACAL,MAAAA,eAAe,CAACO,GAAG,CAACC,eAAJ,CAAoBH,KAAK,CAAC,CAAD,CAAzB,CAAD,CAAf;AACD,KANyB,CAQ1B;;;AACAlB,IAAAA,UAAU,CAAEsB,SAAD,oCAAqBA,SAArB;AAAgC,OAACN,IAAD,GAAQC;AAAxC,MAAD,CAAV;AACD,GAVD;;AAYA,QAAMM,YAAY,GAAG,MAAOR,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACS,cAAF;AACD,GAFD;;AAGA,SACE,4BACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,KAAK,KAAK,IAAvB;AAA6B,IAAA,QAAQ,EAAEiB,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,SAAS,EAAE,MAAMhB,QAAQ,CAAC,IAAD,CAF3B;AAGE,IAAA,OAAO,EAAED,KAHX;AAIE,IAAA,MAAM,EAAC,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,GAAG,EAAET,IAAI,CAAC4B,aAAjB;AAAgC,IAAA,QAAQ,MAAxC;AAAyC,IAAA,MAAM,MAA/C;AAAgD,IAAA,MAAM,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,IAAD,CAAM,QAAN;AACE,IAAA,WAAW,EAAC,mBADd;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAE1B,OAAO,CAACE,IAHjB;AAIE,IAAA,QAAQ,EAAEa,YAJZ;AAKE,IAAA,IAAI,EAAE,CALR;AAME,IAAA,KAAK,EAAE,EANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CARF,EAoBE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AACE,IAAA,KAAK,EAAEf,OAAO,CAACG,QADjB;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,QAAQ,EAAEY,YAHZ;AAIE,IAAA,KAAK,EAAC,cAJR;AAKE,IAAA,IAAI,EAAC,sBALP;AAME,IAAA,WAAW,EAAC,uBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE;AACE,IAAA,GAAG,EAAET,QADP;AAEE,IAAA,QAAQ,EAAES,YAFZ;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAE;AAAEY,MAAAA,OAAO,EAAE;AAAX,KAJT;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,MAAM,EAAC,SANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CApBF,EAwCE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAE,QADN;AAELC,MAAAA,MAAM,EAAE,OAFH;AAGLC,MAAAA,KAAK,EAAE,OAHF;AAILC,MAAAA,MAAM,EAAE,QAJH;AAKLC,MAAAA,UAAU,EAAErB,KAAK,KAAK,IAAV,IAAkB,MALzB;AAMLsB,MAAAA,MAAM,EAAE,SANH;AAOLC,MAAAA,WAAW,EAAEzB,WAAW,GAAG,OAAH,GAAa;AAPhC,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGE,KAAK,KAAK,IAAV,GACC,MAAC,IAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,OAAO,EAAE,MAAML,QAAQ,CAAC6B,OAAT,CAAiBC,KAAjB,EAFjB;AAGE,IAAA,IAAI,EAAC,KAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAOC,4BACE,MAAC,KAAD;AACE,IAAA,KAAK,EAAE;AAAEP,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KADT;AAEE,IAAA,GAAG,EAAEjB,YAFP;AAGE,IAAA,GAAG,EAAC,WAHN;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,OAAO,EAAE,MAAMP,QAAQ,CAAC6B,OAAT,CAAiBC,KAAjB,EANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAlBJ,CAxCF,EAuEE,MAAC,OAAD;AAAS,IAAA,MAAM,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvEF,EAyEE,MAAC,MAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,QAAQ,EAAEpC,OAAO,CAACE,IAAR,KAAiB,EAAjB,IAAuBE,OAFnC;AAGE,IAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHX;AAIE,IAAA,KAAK,EAAE;AAAEiC,MAAAA,eAAe,EAAE,SAAnB;AAA8BC,MAAAA,KAAK,EAAE;AAArC,KAJT;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,OAAO,EAAElC,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzEF,CADF,EAoFE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApFF,CADF;AAwFD,CApHD;;AAsHA,eAAeP,UAAf","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { Form, Button, Image, Divider, Message, Icon } from 'semantic-ui-react';\r\nimport uploadPic from '../../utils/uploadPicToCloudinary';\r\n\r\nconst CreatePost = ({ user, setPosts }) => {\r\n  const [newPost, setNewPost] = useState({\r\n    text: '',\r\n    location: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const inputRef = useRef();\r\n\r\n  const [error, setError] = useState(null);\r\n  const [highlighted, setHighlighted] = useState(false);\r\n  const [media, setMedia] = useState(null);\r\n  const [mediaPreview, setMediaPreview] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, files } = e.target;\r\n\r\n    if (name === 'media') {\r\n      setMedia(files[0]);\r\n      setMediaPreview(URL.createObjectURL(files[0]));\r\n    }\r\n\r\n    //this is can be done differently though\r\n    setNewPost((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <>\r\n      <Form error={error !== null} onSubmit={handleSubmit}>\r\n        <Message\r\n          error\r\n          onDismiss={() => setError(null)}\r\n          content={error}\r\n          header=\"Oops!\"\r\n        />\r\n\r\n        <Form.Group>\r\n          <Image src={user.profilePicUrl} circular avatar inline />\r\n          <Form.TextArea\r\n            placeholder=\"What is happening\"\r\n            name=\"text\"\r\n            value={newPost.text}\r\n            onChange={handleChange}\r\n            rows={4}\r\n            width={14}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Input\r\n            value={newPost.location}\r\n            name=\"location\"\r\n            onChange={handleChange}\r\n            label=\"Add Location\"\r\n            icon=\"map marker alternate\"\r\n            placeholder=\"Want to add location?\"\r\n          />\r\n\r\n          <input\r\n            ref={inputRef}\r\n            onChange={handleChange}\r\n            name=\"media\"\r\n            style={{ display: 'none' }}\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <div\r\n          style={{\r\n            textAlign: 'center',\r\n            height: '150px',\r\n            width: '150px',\r\n            border: 'dotted',\r\n            paddingTop: media === null && '60px',\r\n            cursor: 'pointer',\r\n            borderBlock: highlighted ? 'green' : 'black',\r\n          }}\r\n        >\r\n          {media === null ? (\r\n            <Icon\r\n              name=\"plus\"\r\n              onClick={() => inputRef.current.click()}\r\n              size=\"big\"\r\n            />\r\n          ) : (\r\n            <>\r\n              <Image\r\n                style={{ height: '150px', width: '150px' }}\r\n                src={mediaPreview}\r\n                alt=\"PostImage\"\r\n                centered\r\n                size=\"medium\"\r\n                onClick={() => inputRef.current.click()}\r\n              />\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <Divider hidden />\r\n\r\n        <Button\r\n          circular\r\n          disabled={newPost.text === '' || loading}\r\n          content={<strong>Post</strong>}\r\n          style={{ backgroundColor: '#1DA1F2', color: 'white' }}\r\n          icon=\"send\"\r\n          loading={loading}\r\n        />\r\n      </Form>\r\n\r\n      <Divider />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n"]},"metadata":{},"sourceType":"module"}