{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/User/Desktop/ADVANCED REACT/mernChat/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/User/Desktop/ADVANCED REACT/mernChat/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Users/User/Desktop/ADVANCED REACT/mernChat/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ADVANCED REACT\\\\mernChat\\\\components\\\\Post\\\\CreatePost.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef } from 'react';\nimport { Form, Button, Image, Divider, Message, Item, Icon } from 'semantic-ui-react';\nimport uploadPic from '../../utils/uploadPicToCloudinary';\n\nvar CreatePost = function CreatePost(_ref) {\n  _s();\n\n  var user = _ref.user,\n      setPosts = _ref.setPosts;\n\n  var _useState = useState({\n    text: '',\n    location: ''\n  }),\n      newPost = _useState[0],\n      setNewPost = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var inputRef = useRef();\n\n  var _useState3 = useState(null),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var _useState4 = useState(false),\n      highlighted = _useState4[0],\n      setHighlighted = _useState4[1];\n\n  var _useState5 = useState(null),\n      media = _useState5[0],\n      setMedia = _useState5[1];\n\n  var _useState6 = useState(null),\n      mediaPreview = _useState6[0],\n      setMediaPreview = _useState6[1];\n\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value,\n        files = _e$target.files;\n\n    if (name === 'media') {\n      setMedia(files[0]);\n      setMediaPreview(URL.createObjectURL(files[0]));\n    } //this is can be done differently though\n\n\n    setNewPost(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    error: error !== null,\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(Message, {\n    error: true,\n    onDismiss: function onDismiss() {\n      return setError(null);\n    },\n    content: error,\n    header: \"Oops!\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), __jsx(Form.Group, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(Image, {\n    src: user.profilePicUrl,\n    circular: true,\n    avatar: true,\n    inline: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), __jsx(Form.TextArea, {\n    placeholder: \"What is happening\",\n    name: \"text\",\n    value: newPost.text,\n    onChange: handleChange,\n    rows: 4,\n    width: 14,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Group, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Input, {\n    value: newPost.location,\n    name: \"location\",\n    onChange: handleChange,\n    label: \"Add Location\",\n    icon: \"map marker alternate\",\n    placeholder: \"Want to add location?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), __jsx(\"input\", {\n    ref: inputRef,\n    onChange: handleChange,\n    name: \"media\",\n    style: {\n      display: 'none'\n    },\n    type: \"file\",\n    accept: \"image/*\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    style: {\n      textAlign: 'center',\n      height: '150px',\n      width: '150px',\n      border: 'dotted',\n      paddingTop: media === null && '60px',\n      cursor: 'pointer',\n      borderBlock: highlighted ? 'green' : 'black'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, media === null ? __jsx(Icon, {\n    name: \"plus\",\n    onClick: function onClick() {\n      return inputRef.current.click();\n    },\n    size: \"big\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }) : __jsx(React.Fragment, null, __jsx(Image, {\n    style: {\n      height: '150px',\n      width: '200px'\n    },\n    src: mediaPreview,\n    alt: \"PostImage\",\n    centered: true,\n    size: \"medium\",\n    onClick: function onClick() {\n      return inputRef.current.click();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }))), __jsx(Divider, {\n    hidden: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    circular: true,\n    disabled: newPost.text === '' || loading,\n    content: __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 20\n      }\n    }, \"Post\"),\n    style: {\n      backgroundColor: '#1DA1F2',\n      color: 'white'\n    },\n    Icon: \"send\",\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  })), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(CreatePost, \"FO0BYAhTuuYT9X2IhVjHsD9lpgA=\");\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["C:/Users/User/Desktop/ADVANCED REACT/mernChat/components/Post/CreatePost.js"],"names":["React","useState","useRef","Form","Button","Image","Divider","Message","Item","Icon","uploadPic","CreatePost","user","setPosts","text","location","newPost","setNewPost","loading","setLoading","inputRef","error","setError","highlighted","setHighlighted","media","setMedia","mediaPreview","setMediaPreview","handleChange","e","target","name","value","files","URL","createObjectURL","prevState","handleSubmit","preventDefault","profilePicUrl","display","textAlign","height","width","border","paddingTop","cursor","borderBlock","current","click","backgroundColor","color"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SACEC,IADF,EAEEC,MAFF,EAGEC,KAHF,EAIEC,OAJF,EAKEC,OALF,EAMEC,IANF,EAOEC,IAPF,QAQO,mBARP;AASA,OAAOC,SAAP,MAAsB,mCAAtB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAwB;AAAA;;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACXZ,QAAQ,CAAC;AACrCa,IAAAA,IAAI,EAAE,EAD+B;AAErCC,IAAAA,QAAQ,EAAE;AAF2B,GAAD,CADG;AAAA,MAClCC,OADkC;AAAA,MACzBC,UADyB;;AAAA,mBAKXhB,QAAQ,CAAC,KAAD,CALG;AAAA,MAKlCiB,OALkC;AAAA,MAKzBC,UALyB;;AAMzC,MAAMC,QAAQ,GAAGlB,MAAM,EAAvB;;AANyC,mBAQfD,QAAQ,CAAC,IAAD,CARO;AAAA,MAQlCoB,KARkC;AAAA,MAQ3BC,QAR2B;;AAAA,mBASHrB,QAAQ,CAAC,KAAD,CATL;AAAA,MASlCsB,WATkC;AAAA,MASrBC,cATqB;;AAAA,mBAUfvB,QAAQ,CAAC,IAAD,CAVO;AAAA,MAUlCwB,KAVkC;AAAA,MAU3BC,QAV2B;;AAAA,mBAWDzB,QAAQ,CAAC,IAAD,CAXP;AAAA,MAWlC0B,YAXkC;AAAA,MAWpBC,eAXoB;;AAazC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAAA,oBACKA,CAAC,CAACC,MADP;AAAA,QAClBC,IADkB,aAClBA,IADkB;AAAA,QACZC,KADY,aACZA,KADY;AAAA,QACLC,KADK,aACLA,KADK;;AAG1B,QAAIF,IAAI,KAAK,OAAb,EAAsB;AACpBN,MAAAA,QAAQ,CAACQ,KAAK,CAAC,CAAD,CAAN,CAAR;AACAN,MAAAA,eAAe,CAACO,GAAG,CAACC,eAAJ,CAAoBF,KAAK,CAAC,CAAD,CAAzB,CAAD,CAAf;AACD,KANyB,CAQ1B;;;AACAjB,IAAAA,UAAU,CAAC,UAACoB,SAAD;AAAA,6CAAqBA,SAArB,2BAAiCL,IAAjC,EAAwCC,KAAxC;AAAA,KAAD,CAAV;AACD,GAVD;;AAYA,MAAMK,YAAY;AAAA,yEAAG,iBAAOR,CAAP;AAAA;AAAA;AAAA;AAAA;AACnBA,cAAAA,CAAC,CAACS,cAAF;;AADmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZD,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAGA,SACE,4BACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEjB,KAAK,KAAK,IAAvB;AAA6B,IAAA,QAAQ,EAAEiB,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,SAAS,EAAE;AAAA,aAAMhB,QAAQ,CAAC,IAAD,CAAd;AAAA,KAFb;AAGE,IAAA,OAAO,EAAED,KAHX;AAIE,IAAA,MAAM,EAAC,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,GAAG,EAAET,IAAI,CAAC4B,aAAjB;AAAgC,IAAA,QAAQ,MAAxC;AAAyC,IAAA,MAAM,MAA/C;AAAgD,IAAA,MAAM,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,IAAD,CAAM,QAAN;AACE,IAAA,WAAW,EAAC,mBADd;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAExB,OAAO,CAACF,IAHjB;AAIE,IAAA,QAAQ,EAAEe,YAJZ;AAKE,IAAA,IAAI,EAAE,CALR;AAME,IAAA,KAAK,EAAE,EANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CARF,EAoBE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AACE,IAAA,KAAK,EAAEb,OAAO,CAACD,QADjB;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,QAAQ,EAAEc,YAHZ;AAIE,IAAA,KAAK,EAAC,cAJR;AAKE,IAAA,IAAI,EAAC,sBALP;AAME,IAAA,WAAW,EAAC,uBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE;AACE,IAAA,GAAG,EAAET,QADP;AAEE,IAAA,QAAQ,EAAES,YAFZ;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAE;AAAEY,MAAAA,OAAO,EAAE;AAAX,KAJT;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,MAAM,EAAC,SANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CApBF,EAwCE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAE,QADN;AAELC,MAAAA,MAAM,EAAE,OAFH;AAGLC,MAAAA,KAAK,EAAE,OAHF;AAILC,MAAAA,MAAM,EAAE,QAJH;AAKLC,MAAAA,UAAU,EAAErB,KAAK,KAAK,IAAV,IAAkB,MALzB;AAMLsB,MAAAA,MAAM,EAAE,SANH;AAOLC,MAAAA,WAAW,EAAEzB,WAAW,GAAG,OAAH,GAAa;AAPhC,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGE,KAAK,KAAK,IAAV,GACC,MAAC,IAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,OAAO,EAAE;AAAA,aAAML,QAAQ,CAAC6B,OAAT,CAAiBC,KAAjB,EAAN;AAAA,KAFX;AAGE,IAAA,IAAI,EAAC,KAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAOC,4BACE,MAAC,KAAD;AACE,IAAA,KAAK,EAAE;AAAEP,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KADT;AAEE,IAAA,GAAG,EAAEjB,YAFP;AAGE,IAAA,GAAG,EAAC,WAHN;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,OAAO,EAAE;AAAA,aAAMP,QAAQ,CAAC6B,OAAT,CAAiBC,KAAjB,EAAN;AAAA,KANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAlBJ,CAxCF,EAuEE,MAAC,OAAD;AAAS,IAAA,MAAM,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvEF,EAyEE,MAAC,MAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,QAAQ,EAAElC,OAAO,CAACF,IAAR,KAAiB,EAAjB,IAAuBI,OAFnC;AAGE,IAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHX;AAIE,IAAA,KAAK,EAAE;AAAEiC,MAAAA,eAAe,EAAE,SAAnB;AAA8BC,MAAAA,KAAK,EAAE;AAArC,KAJT;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,OAAO,EAAElC,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzEF,CADF,EAoFE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApFF,CADF;AAwFD,CApHD;;GAAMP,U;;KAAAA,U;AAsHN,eAAeA,UAAf","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport {\r\n  Form,\r\n  Button,\r\n  Image,\r\n  Divider,\r\n  Message,\r\n  Item,\r\n  Icon,\r\n} from 'semantic-ui-react';\r\nimport uploadPic from '../../utils/uploadPicToCloudinary';\r\n\r\nconst CreatePost = ({ user, setPosts }) => {\r\n  const [newPost, setNewPost] = useState({\r\n    text: '',\r\n    location: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const inputRef = useRef();\r\n\r\n  const [error, setError] = useState(null);\r\n  const [highlighted, setHighlighted] = useState(false);\r\n  const [media, setMedia] = useState(null);\r\n  const [mediaPreview, setMediaPreview] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, files } = e.target;\r\n\r\n    if (name === 'media') {\r\n      setMedia(files[0]);\r\n      setMediaPreview(URL.createObjectURL(files[0]));\r\n    }\r\n\r\n    //this is can be done differently though\r\n    setNewPost((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <>\r\n      <Form error={error !== null} onSubmit={handleSubmit}>\r\n        <Message\r\n          error\r\n          onDismiss={() => setError(null)}\r\n          content={error}\r\n          header=\"Oops!\"\r\n        />\r\n\r\n        <Form.Group>\r\n          <Image src={user.profilePicUrl} circular avatar inline />\r\n          <Form.TextArea\r\n            placeholder=\"What is happening\"\r\n            name=\"text\"\r\n            value={newPost.text}\r\n            onChange={handleChange}\r\n            rows={4}\r\n            width={14}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Input\r\n            value={newPost.location}\r\n            name=\"location\"\r\n            onChange={handleChange}\r\n            label=\"Add Location\"\r\n            icon=\"map marker alternate\"\r\n            placeholder=\"Want to add location?\"\r\n          />\r\n\r\n          <input\r\n            ref={inputRef}\r\n            onChange={handleChange}\r\n            name=\"media\"\r\n            style={{ display: 'none' }}\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <div\r\n          style={{\r\n            textAlign: 'center',\r\n            height: '150px',\r\n            width: '150px',\r\n            border: 'dotted',\r\n            paddingTop: media === null && '60px',\r\n            cursor: 'pointer',\r\n            borderBlock: highlighted ? 'green' : 'black',\r\n          }}\r\n        >\r\n          {media === null ? (\r\n            <Icon\r\n              name=\"plus\"\r\n              onClick={() => inputRef.current.click()}\r\n              size=\"big\"\r\n            />\r\n          ) : (\r\n            <>\r\n              <Image\r\n                style={{ height: '150px', width: '200px' }}\r\n                src={mediaPreview}\r\n                alt=\"PostImage\"\r\n                centered\r\n                size=\"medium\"\r\n                onClick={() => inputRef.current.click()}\r\n              />\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <Divider hidden />\r\n\r\n        <Button\r\n          circular\r\n          disabled={newPost.text === '' || loading}\r\n          content={<strong>Post</strong>}\r\n          style={{ backgroundColor: '#1DA1F2', color: 'white' }}\r\n          Icon=\"send\"\r\n          loading={loading}\r\n        />\r\n      </Form>\r\n\r\n      <Divider />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n"]},"metadata":{},"sourceType":"module"}