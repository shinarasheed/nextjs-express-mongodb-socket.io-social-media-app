{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\REACT\\\\mernChat\\\\components\\\\Chats\\\\Chat.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Divider, Comment, Icon, List } from 'semantic-ui-react';\nimport { useRouter } from 'next/router';\nimport calculateTime from '../../utils/calculateTime';\n\nfunction Chat({\n  chat,\n  deleteChat,\n  connectedUsers\n}) {\n  const router = useRouter();\n  const isOnine = connectedUsers.length > 0 && connectedUsers.filter(connectedUser => connectedUser.userId === chat.messagesWith).length > 0;\n  return __jsx(React.Fragment, null, __jsx(List, {\n    selection: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(List.Item, {\n    active: router.query.message === chat.messagesWith,\n    onClick: () => router.push(`/messages?message=${chat.messagesWith}`, undefined, {\n      shallow: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(Comment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, __jsx(Comment.Avatar, {\n    src: chat.profilePicUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), __jsx(Comment.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, __jsx(Comment.Author, {\n    as: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, chat.name, ' ', isOnine && __jsx(Icon, {\n    name: \"circle\",\n    size: \"sm\",\n    color: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }\n  }), ' '), __jsx(Comment.Metadata, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, calculateTime(chat.date)), __jsx(\"div\", {\n    style: {\n      position: 'absolute',\n      right: '10px',\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, __jsx(Icon, {\n    name: \"trash alternate\",\n    color: \"red\",\n    onClick: () => deleteChat(chat.messagesWith),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }\n  }))), __jsx(Comment.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, chat.lastMessage.length > 20 ? `${chat.lastMessage.substring(0, 20)} ...` : chat.lastMessage))))), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/User/Desktop/REACT/mernChat/components/Chats/Chat.js"],"names":["React","Divider","Comment","Icon","List","useRouter","calculateTime","Chat","chat","deleteChat","connectedUsers","router","isOnine","length","filter","connectedUser","userId","messagesWith","query","message","push","undefined","shallow","profilePicUrl","name","date","position","right","cursor","lastMessage","substring"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Divider, Comment, Icon, List } from 'semantic-ui-react';\r\nimport { useRouter } from 'next/router';\r\nimport calculateTime from '../../utils/calculateTime';\r\n\r\nfunction Chat({ chat, deleteChat, connectedUsers }) {\r\n  const router = useRouter();\r\n\r\n  const isOnine =\r\n    connectedUsers.length > 0 &&\r\n    connectedUsers.filter(\r\n      (connectedUser) => connectedUser.userId === chat.messagesWith\r\n    ).length > 0;\r\n\r\n  return (\r\n    <>\r\n      <List selection>\r\n        <List.Item\r\n          active={router.query.message === chat.messagesWith}\r\n          onClick={() =>\r\n            router.push(`/messages?message=${chat.messagesWith}`, undefined, {\r\n              shallow: true,\r\n            })\r\n          }\r\n        >\r\n          <Comment>\r\n            <Comment.Avatar src={chat.profilePicUrl} />\r\n            <Comment.Content>\r\n              <Comment.Author as=\"a\">\r\n                {chat.name}{' '}\r\n                {isOnine && <Icon name=\"circle\" size=\"sm\" color=\"green\" />}{' '}\r\n              </Comment.Author>\r\n\r\n              <Comment.Metadata>\r\n                <div>{calculateTime(chat.date)}</div>\r\n                <div\r\n                  style={{\r\n                    position: 'absolute',\r\n                    right: '10px',\r\n                    cursor: 'pointer',\r\n                  }}\r\n                >\r\n                  <Icon\r\n                    name=\"trash alternate\"\r\n                    color=\"red\"\r\n                    onClick={() => deleteChat(chat.messagesWith)}\r\n                  />\r\n                </div>\r\n              </Comment.Metadata>\r\n\r\n              <Comment.Text>\r\n                {chat.lastMessage.length > 20\r\n                  ? `${chat.lastMessage.substring(0, 20)} ...`\r\n                  : chat.lastMessage}\r\n              </Comment.Text>\r\n            </Comment.Content>\r\n          </Comment>\r\n        </List.Item>\r\n      </List>\r\n      <Divider />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}