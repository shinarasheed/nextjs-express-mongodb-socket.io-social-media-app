{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\REACT\\\\mernChat\\\\pages\\\\reset\\\\[token].js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { Form, Button, Message, Segment, Divider } from 'semantic-ui-react';\nimport baseUrl from '../../utils/baseUrl';\nimport catchErrors from '../../utils/catchErrors';\nimport axios from 'axios';\n\nfunction TokenPage() {\n  const router = useRouter();\n  const {\n    0: newPassword,\n    1: setNewPassword\n  } = useState({\n    field1: '',\n    field2: ''\n  });\n  const {\n    field1,\n    field2\n  } = newPassword;\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: errorMsg,\n    1: setErrorMsg\n  } = useState(null);\n  const {\n    0: success,\n    1: setSuccess\n  } = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewPassword(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      [name]: value\n    }));\n  };\n\n  useEffect(() => {\n    errorMsg !== null && setTimeout(() => setErrorMsg(null), 5000);\n  }, [errorMsg]);\n\n  const resetPassword = async e => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      if (field1 !== field2) {\n        return setErrorMsg('Passwords do not match');\n      }\n\n      await axios.post(`${baseUrl}/api/reset/token`, {\n        password: field1,\n        token: router.query.token\n      });\n      setSuccess(true);\n    } catch (error) {\n      setErrorMsg(catchErrors(error));\n    }\n\n    setLoading(false);\n  };\n\n  return __jsx(React.Fragment, null, success ? __jsx(Message, {\n    attached: true,\n    success: true,\n    size: \"large\",\n    header: \"Password reset successfull\",\n    icon: \"check\",\n    content: \"Login Again\",\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => router.push('/login'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }) : __jsx(Message, {\n    attached: true,\n    icon: \"settings\",\n    header: \"Reset Password\",\n    color: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), !success && __jsx(Form, {\n    loading: loading,\n    onSubmit: resetPassword,\n    error: errorMsg !== null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(Message, {\n    error: true,\n    header: \"Oops!\",\n    content: errorMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), __jsx(Segment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Input, {\n    fluid: true,\n    icon: \"eye\",\n    type: \"password\",\n    iconPosition: \"left\",\n    label: \"New Password\",\n    placeholder: \"Enter new Password\",\n    name: \"field1\",\n    onChange: handleChange,\n    value: field1,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), __jsx(Form.Input, {\n    fluid: true,\n    icon: \"eye\",\n    type: \"password\",\n    iconPosition: \"left\",\n    label: \"Confirm Password\",\n    placeholder: \"Confirm new Password\",\n    name: \"field2\",\n    onChange: handleChange,\n    value: field2,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), __jsx(Divider, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    disabled: field1 === '' || field2 === '' || loading,\n    icon: \"configure\",\n    type: \"submit\",\n    color: \"orange\",\n    content: \"Reset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport default TokenPage;","map":{"version":3,"sources":["C:/Users/User/Desktop/REACT/mernChat/pages/reset/[token].js"],"names":["React","useState","useEffect","useRouter","Form","Button","Message","Segment","Divider","baseUrl","catchErrors","axios","TokenPage","router","newPassword","setNewPassword","field1","field2","loading","setLoading","errorMsg","setErrorMsg","success","setSuccess","handleChange","e","name","value","target","prev","setTimeout","resetPassword","preventDefault","post","password","token","query","error","cursor","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { Form, Button, Message, Segment, Divider } from 'semantic-ui-react';\r\nimport baseUrl from '../../utils/baseUrl';\r\nimport catchErrors from '../../utils/catchErrors';\r\nimport axios from 'axios';\r\n\r\nfunction TokenPage() {\r\n  const router = useRouter();\r\n\r\n  const [newPassword, setNewPassword] = useState({ field1: '', field2: '' });\r\n\r\n  const { field1, field2 } = newPassword;\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setNewPassword((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    errorMsg !== null && setTimeout(() => setErrorMsg(null), 5000);\r\n  }, [errorMsg]);\r\n\r\n  const resetPassword = async (e) => {\r\n    e.preventDefault();\r\n\r\n    setLoading(true);\r\n    try {\r\n      if (field1 !== field2) {\r\n        return setErrorMsg('Passwords do not match');\r\n      }\r\n\r\n      await axios.post(`${baseUrl}/api/reset/token`, {\r\n        password: field1,\r\n        token: router.query.token,\r\n      });\r\n\r\n      setSuccess(true);\r\n    } catch (error) {\r\n      setErrorMsg(catchErrors(error));\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {success ? (\r\n        <Message\r\n          attached\r\n          success\r\n          size=\"large\"\r\n          header=\"Password reset successfull\"\r\n          icon=\"check\"\r\n          content=\"Login Again\"\r\n          style={{ cursor: 'pointer' }}\r\n          onClick={() => router.push('/login')}\r\n        />\r\n      ) : (\r\n        <Message\r\n          attached\r\n          icon=\"settings\"\r\n          header=\"Reset Password\"\r\n          color=\"teal\"\r\n        />\r\n      )}\r\n\r\n      {!success && (\r\n        <Form\r\n          loading={loading}\r\n          onSubmit={resetPassword}\r\n          error={errorMsg !== null}\r\n        >\r\n          <Message error header=\"Oops!\" content={errorMsg} />\r\n\r\n          <Segment>\r\n            <Form.Input\r\n              fluid\r\n              icon=\"eye\"\r\n              type=\"password\"\r\n              iconPosition=\"left\"\r\n              label=\"New Password\"\r\n              placeholder=\"Enter new Password\"\r\n              name=\"field1\"\r\n              onChange={handleChange}\r\n              value={field1}\r\n              required\r\n            />\r\n            <Form.Input\r\n              fluid\r\n              icon=\"eye\"\r\n              type=\"password\"\r\n              iconPosition=\"left\"\r\n              label=\"Confirm Password\"\r\n              placeholder=\"Confirm new Password\"\r\n              name=\"field2\"\r\n              onChange={handleChange}\r\n              value={field2}\r\n              required\r\n            />\r\n\r\n            <Divider hidden />\r\n\r\n            <Button\r\n              disabled={field1 === '' || field2 === '' || loading}\r\n              icon=\"configure\"\r\n              type=\"submit\"\r\n              color=\"orange\"\r\n              content=\"Reset\"\r\n            />\r\n          </Segment>\r\n        </Form>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TokenPage;\r\n"]},"metadata":{},"sourceType":"module"}