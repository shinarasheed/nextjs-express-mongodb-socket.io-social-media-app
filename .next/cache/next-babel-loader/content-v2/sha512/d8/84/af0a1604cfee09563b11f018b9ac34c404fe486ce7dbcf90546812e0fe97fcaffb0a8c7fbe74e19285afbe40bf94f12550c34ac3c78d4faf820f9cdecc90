{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ADVANCED REACT\\\\mernChat\\\\pages\\\\[username].js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport baseUrl from '../utils/baseUrl';\nimport { parseCookies } from 'nookies';\nimport cookie from 'js-cookie';\nimport { Grid } from 'semantic-ui-react';\nimport { NoProfile } from '../components/Layout/NoData';\nimport ProfileMenuTabs from '../components/Profile/ProfileMenuTabs';\n\nconst ProfilePage = ({\n  profile,\n  followersLength,\n  followingLength,\n  errorLoading,\n  user,\n  userFollowStats\n}) => {\n  const router = useRouter();\n  const {\n    0: posts,\n    1: setPosts\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: activeItem,\n    1: setActiveItem\n  } = useState('profile');\n\n  const handleItemClick = item => setActiveItem(item);\n\n  const {\n    0: loggedUserFollowStats,\n    1: setUserFollowStats\n  } = useState(userFollowStats);\n  const ownAccount = profile.user._id === user._id;\n  useEffect(() => {\n    const getPosts = async () => {\n      setLoading(true);\n\n      try {\n        const {\n          username\n        } = router.query;\n        const token = cookie.get('token');\n        const res = await axios.get(`${baseUrl}/api/profile/posts/${username}`, {\n          headers: {\n            Authorization: token\n          }\n        });\n        setPosts(res.data);\n      } catch (error) {\n        console.log('Error Loading Post');\n      }\n\n      setLoading(false);\n    };\n\n    getPosts();\n  }, []);\n  if (errorLoading) return __jsx(NoProfile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 28\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(Grid, {\n    stackable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, __jsx(ProfileMenuTabs, {\n    activeItem: activeItem,\n    handleItemClick: handleItemClick,\n    followersLength: followersLength,\n    followingLength: followingLength,\n    ownAccount: ownAccount,\n    loggedUserFollowStats: loggedUserFollowStats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })))));\n}; //get serversideProps instead\n\n\nProfilePage.getInitialProps = async ctx => {\n  try {\n    const {\n      username\n    } = ctx.query;\n    const {\n      token\n    } = parseCookies(ctx);\n    const res = await axios.get(`${baseUrl}/api/profile/${username}`, {\n      headers: {\n        Authorization: token\n      }\n    });\n    const {\n      profile,\n      followersLength,\n      followingLength\n    } = res.data;\n    return {\n      profile,\n      followersLength,\n      followingLength\n    };\n  } catch (error) {\n    return {\n      errorLoading: true\n    };\n  }\n};\n\nexport default ProfilePage;","map":{"version":3,"sources":["C:/Users/User/Desktop/ADVANCED REACT/mernChat/pages/[username].js"],"names":["React","useState","useRouter","axios","baseUrl","parseCookies","cookie","Grid","NoProfile","ProfileMenuTabs","ProfilePage","profile","followersLength","followingLength","errorLoading","user","userFollowStats","router","posts","setPosts","loading","setLoading","activeItem","setActiveItem","handleItemClick","item","loggedUserFollowStats","setUserFollowStats","ownAccount","_id","useEffect","getPosts","username","query","token","get","res","headers","Authorization","data","error","console","log","getInitialProps","ctx"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport axios from 'axios';\r\nimport baseUrl from '../utils/baseUrl';\r\nimport { parseCookies } from 'nookies';\r\nimport cookie from 'js-cookie';\r\nimport { Grid } from 'semantic-ui-react';\r\n\r\nimport { NoProfile } from '../components/Layout/NoData';\r\nimport ProfileMenuTabs from '../components/Profile/ProfileMenuTabs';\r\n\r\nconst ProfilePage = ({\r\n  profile,\r\n  followersLength,\r\n  followingLength,\r\n  errorLoading,\r\n  user,\r\n  userFollowStats,\r\n}) => {\r\n  const router = useRouter();\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activeItem, setActiveItem] = useState('profile');\r\n  const handleItemClick = (item) => setActiveItem(item);\r\n  const [loggedUserFollowStats, setUserFollowStats] = useState(userFollowStats);\r\n\r\n  const ownAccount = profile.user._id === user._id;\r\n\r\n  useEffect(() => {\r\n    const getPosts = async () => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const { username } = router.query;\r\n        const token = cookie.get('token');\r\n\r\n        const res = await axios.get(\r\n          `${baseUrl}/api/profile/posts/${username}`,\r\n          { headers: { Authorization: token } }\r\n        );\r\n\r\n        setPosts(res.data);\r\n      } catch (error) {\r\n        console.log('Error Loading Post');\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    getPosts();\r\n  }, []);\r\n\r\n  if (errorLoading) return <NoProfile />;\r\n  return (\r\n    <>\r\n      <Grid stackable>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <ProfileMenuTabs\r\n              activeItem={activeItem}\r\n              handleItemClick={handleItemClick}\r\n              followersLength={followersLength}\r\n              followingLength={followingLength}\r\n              ownAccount={ownAccount}\r\n              loggedUserFollowStats={loggedUserFollowStats}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\n//get serversideProps instead\r\nProfilePage.getInitialProps = async (ctx) => {\r\n  try {\r\n    const { username } = ctx.query;\r\n    const { token } = parseCookies(ctx);\r\n\r\n    const res = await axios.get(`${baseUrl}/api/profile/${username}`, {\r\n      headers: { Authorization: token },\r\n    });\r\n\r\n    const { profile, followersLength, followingLength } = res.data;\r\n\r\n    return {\r\n      profile,\r\n      followersLength,\r\n      followingLength,\r\n    };\r\n  } catch (error) {\r\n    return { errorLoading: true };\r\n  }\r\n};\r\n\r\nexport default ProfilePage;\r\n"]},"metadata":{},"sourceType":"module"}