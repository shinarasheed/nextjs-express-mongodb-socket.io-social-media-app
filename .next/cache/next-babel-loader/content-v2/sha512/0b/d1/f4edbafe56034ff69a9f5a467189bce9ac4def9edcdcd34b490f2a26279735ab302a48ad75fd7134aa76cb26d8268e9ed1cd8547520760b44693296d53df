{"ast":null,"code":"var _regeneratorRuntime = require(\"C:/Users/User/Desktop/REACT/mernChat/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:/Users/User/Desktop/REACT/mernChat/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar express = require('express');\n\nvar router = express.Router();\n\nvar ChatModel = require('../models/ChatModel');\n\nvar UserModel = require('../models/UserModel');\n\nvar authMiddleware = require('../middleware/authMiddleware'); // GET ALL CHATS\n\n\nrouter.get('/', authMiddleware, /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req, res) {\n    var userId, user, chatsToBeSent;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            userId = req.userId;\n            _context.next = 4;\n            return ChatModel.findOne({\n              user: userId\n            }).populate('chats.messagesWith');\n\n          case 4:\n            user = _context.sent;\n            chatsToBeSent = [];\n\n            if (!(user.chats.length > 0)) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 9;\n            return user.chats.map(function (chat) {\n              return {\n                messagesWith: chat.messagesWith._id,\n                name: chat.messagesWith.name,\n                profilePicUrl: chat.messagesWith.profilePicUrl,\n                lastMessage: chat.messages[chat.messages.length - 1].msg,\n                date: chat.messages[chat.messages.length - 1].date\n              };\n            });\n\n          case 9:\n            chatsToBeSent = _context.sent;\n\n          case 10:\n            return _context.abrupt(\"return\", res.json(chatsToBeSent));\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n            return _context.abrupt(\"return\", res.status(500).send('Server Error'));\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 13]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}()); // GET USER INFO\n\nrouter.get('/user/:userToFindId', authMiddleware, /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(req, res) {\n    var user;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return UserModel.findById(req.params.userToFindId);\n\n          case 3:\n            user = _context2.sent;\n\n            if (user) {\n              _context2.next = 6;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", res.status(404).send('No User found'));\n\n          case 6:\n            return _context2.abrupt(\"return\", res.json({\n              name: user.name,\n              profilePicUrl: user.profilePicUrl\n            }));\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error(_context2.t0);\n            return _context2.abrupt(\"return\", res.status(500).send('Server Error'));\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 9]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}()); // Delete a chat\n\nrouter[\"delete\"](\"/:messagesWith\", authMiddleware, /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(req, res) {\n    var userId, messagesWith, user, chatToDelete, indexOf;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            userId = req.userId;\n            messagesWith = req.params.messagesWith;\n            _context3.next = 5;\n            return ChatModel.findOne({\n              user: userId\n            });\n\n          case 5:\n            user = _context3.sent;\n            chatToDelete = user.chats.find(function (chat) {\n              return chat.messagesWith.toString() === messagesWith;\n            });\n\n            if (chatToDelete) {\n              _context3.next = 9;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", res.status(404).send('Chat not found'));\n\n          case 9:\n            indexOf = user.chats.map(function (chat) {\n              return chat.messagesWith.toString();\n            }).indexOf(messagesWith);\n            user.chats.splice(indexOf, 1);\n            _context3.next = 13;\n            return user.save();\n\n          case 13:\n            return _context3.abrupt(\"return\", res.status(200).send('Chat deleted'));\n\n          case 16:\n            _context3.prev = 16;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.error(_context3.t0);\n            return _context3.abrupt(\"return\", res.status(500).send('Server Error'));\n\n          case 20:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 16]]);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nmodule.exports = router;","map":{"version":3,"sources":["C:/Users/User/Desktop/REACT/mernChat/api/chats.js"],"names":["express","require","router","Router","ChatModel","UserModel","authMiddleware","get","req","res","userId","findOne","user","populate","chatsToBeSent","chats","length","map","chat","messagesWith","_id","name","profilePicUrl","lastMessage","messages","msg","date","json","console","error","status","send","findById","params","userToFindId","chatToDelete","find","toString","indexOf","splice","save","module","exports"],"mappings":"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","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst ChatModel = require('../models/ChatModel');\r\nconst UserModel = require('../models/UserModel');\r\nconst authMiddleware = require('../middleware/authMiddleware');\r\n\r\n// GET ALL CHATS\r\n\r\nrouter.get('/', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { userId } = req;\r\n\r\n    const user = await ChatModel.findOne({ user: userId }).populate(\r\n      'chats.messagesWith'\r\n    );\r\n\r\n    let chatsToBeSent = [];\r\n\r\n    if (user.chats.length > 0) {\r\n      chatsToBeSent = await user.chats.map((chat) => ({\r\n        messagesWith: chat.messagesWith._id,\r\n        name: chat.messagesWith.name,\r\n        profilePicUrl: chat.messagesWith.profilePicUrl,\r\n        lastMessage: chat.messages[chat.messages.length - 1].msg,\r\n        date: chat.messages[chat.messages.length - 1].date,\r\n      }));\r\n    }\r\n\r\n    return res.json(chatsToBeSent);\r\n  } catch (error) {\r\n    console.error(error);\r\n    return res.status(500).send('Server Error');\r\n  }\r\n});\r\n\r\n// GET USER INFO\r\n\r\nrouter.get('/user/:userToFindId', authMiddleware, async (req, res) => {\r\n  try {\r\n    const user = await UserModel.findById(req.params.userToFindId);\r\n\r\n    if (!user) {\r\n      return res.status(404).send('No User found');\r\n    }\r\n\r\n    return res.json({ name: user.name, profilePicUrl: user.profilePicUrl });\r\n  } catch (error) {\r\n    console.error(error);\r\n    return res.status(500).send('Server Error');\r\n  }\r\n});\r\n\r\n// Delete a chat\r\n\r\nrouter.delete(`/:messagesWith`, authMiddleware, async (req, res) => {\r\n  try {\r\n    const { userId } = req;\r\n    const { messagesWith } = req.params;\r\n\r\n    const user = await ChatModel.findOne({ user: userId });\r\n\r\n    const chatToDelete = user.chats.find(\r\n      (chat) => chat.messagesWith.toString() === messagesWith\r\n    );\r\n\r\n    if (!chatToDelete) {\r\n      return res.status(404).send('Chat not found');\r\n    }\r\n\r\n    const indexOf = user.chats\r\n      .map((chat) => chat.messagesWith.toString())\r\n      .indexOf(messagesWith);\r\n\r\n    user.chats.splice(indexOf, 1);\r\n\r\n    await user.save();\r\n\r\n    return res.status(200).send('Chat deleted');\r\n  } catch (error) {\r\n    console.error(error);\r\n    return res.status(500).send('Server Error');\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n"]},"metadata":{},"sourceType":"script"}