{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\REACT\\\\mernChat\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport baseUrl from '../utils/baseUrl';\nimport CreatePost from '../components/Post/CreatePost';\nimport CardPost from '../components/Post/CardPost';\nimport { Segment } from 'semantic-ui-react';\nimport { parseCookies } from 'nookies';\nimport { NoPosts } from '../components/Layout/NoData';\nimport { PostDeleteToastr } from '../components/Layout/Toastr';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { PlaceHolderPosts, EndMessage } from '../components/Layout/PlaceHolderGroup';\nimport cookie from 'js-cookie';\nimport getUserInfo from '../utils/getUserInfo';\n\nfunction Index({\n  user,\n  postsData,\n  errorLoading\n}) {\n  const {\n    0: posts,\n    1: setPosts\n  } = useState(postsData || []);\n  const {\n    0: showToastr,\n    1: setShowToastr\n  } = useState(false);\n  const {\n    0: hasMore,\n    1: setHasMore\n  } = useState(true);\n  const {\n    0: pageNumber,\n    1: setPageNumber\n  } = useState(2);\n  const socket = useRef();\n  const {\n    0: newMessageReceived,\n    1: setNewMessageReceived\n  } = useState(null);\n  const {\n    0: newMessageModal,\n    1: showNewMessageModal\n  } = useState(false);\n  useEffect(() => {\n    document.title = `Welcome, ${user.name.split(' ')[0]}`;\n\n    if (!socket.current) {\n      socket.current = io(baseUrl);\n    }\n\n    if (socket.current) {\n      socket.current.emit('join', {\n        userId: user._id\n      });\n      socket.on('newMsgReceived', async ({\n        newMsg\n      }) => {\n        const {\n          name,\n          profilePicUrl\n        } = await getUserInfo(newMsg.sender);\n\n        if (user.newMessagePopup) {\n          setNewMessageReceived(_objectSpread(_objectSpread({}, newMsg), {}, {\n            senderName: name,\n            senderProfilePic,\n            profilePicUrl\n          }));\n        }\n      });\n    } //clean up\n\n\n    return () => {\n      if (socket.current) {\n        socket.current.emit('disconnect');\n        socket.current.off();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    showToastr && setTimeout(() => setShowToastr(false), 3000);\n  }, [showToastr]);\n\n  const fetchDataOnScroll = async () => {\n    try {\n      const res = await axios.get(`${baseUrl}/api/posts`, {\n        headers: {\n          Authorization: cookie.get('token')\n        },\n        params: {\n          pageNumber\n        }\n      });\n      if (res.data.length === 0) setHasMore(false);\n      setPosts(prev => [...prev, ...res.data]);\n      setPageNumber(prev => prev + 1);\n    } catch (error) {\n      alert('Error fetching Posts');\n    }\n  };\n\n  if (posts.length === 0 || errorLoading) return __jsx(NoPosts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 50\n    }\n  });\n  return __jsx(React.Fragment, null, showToastr && __jsx(PostDeleteToastr, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 22\n    }\n  }), newMessageModal && newMessageReceived !== null && __jsx(MessageNotificationModal, {\n    socket: socket.current,\n    newMessageModal: newMessageModal,\n    showNewMessageModal: showNewMessageModal,\n    newMessageReceived: newMessageReceived,\n    username: user.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), __jsx(Segment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, __jsx(CreatePost, {\n    user: user,\n    setPosts: setPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), __jsx(InfiniteScroll, {\n    hasMore: hasMore,\n    next: fetchDataOnScroll,\n    loader: __jsx(PlaceHolderPosts, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }),\n    endMessage: __jsx(EndMessage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 23\n      }\n    }),\n    dataLength: posts.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, posts.map(post => __jsx(CardPost, {\n    key: post._id,\n    post: post,\n    user: user,\n    setPosts: setPosts,\n    setShowToastr: setShowToastr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  })))));\n}\n\nIndex.getInitialProps = async ctx => {\n  try {\n    const {\n      token\n    } = parseCookies(ctx);\n    const res = await axios.get(`${baseUrl}/api/posts`, {\n      headers: {\n        Authorization: token\n      },\n      params: {\n        pageNumber: 1\n      }\n    });\n    return {\n      postsData: res.data\n    };\n  } catch (error) {\n    return {\n      errorLoading: true\n    };\n  }\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/User/Desktop/REACT/mernChat/pages/index.js"],"names":["React","useEffect","useRef","useState","io","axios","baseUrl","CreatePost","CardPost","Segment","parseCookies","NoPosts","PostDeleteToastr","InfiniteScroll","PlaceHolderPosts","EndMessage","cookie","getUserInfo","Index","user","postsData","errorLoading","posts","setPosts","showToastr","setShowToastr","hasMore","setHasMore","pageNumber","setPageNumber","socket","newMessageReceived","setNewMessageReceived","newMessageModal","showNewMessageModal","document","title","name","split","current","emit","userId","_id","on","newMsg","profilePicUrl","sender","newMessagePopup","senderName","senderProfilePic","off","setTimeout","fetchDataOnScroll","res","get","headers","Authorization","params","data","length","prev","error","alert","username","map","post","getInitialProps","ctx","token"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport baseUrl from '../utils/baseUrl';\r\nimport CreatePost from '../components/Post/CreatePost';\r\nimport CardPost from '../components/Post/CardPost';\r\nimport { Segment } from 'semantic-ui-react';\r\nimport { parseCookies } from 'nookies';\r\nimport { NoPosts } from '../components/Layout/NoData';\r\nimport { PostDeleteToastr } from '../components/Layout/Toastr';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport {\r\n  PlaceHolderPosts,\r\n  EndMessage,\r\n} from '../components/Layout/PlaceHolderGroup';\r\nimport cookie from 'js-cookie';\r\n\r\nimport getUserInfo from '../utils/getUserInfo';\r\n\r\nfunction Index({ user, postsData, errorLoading }) {\r\n  const [posts, setPosts] = useState(postsData || []);\r\n  const [showToastr, setShowToastr] = useState(false);\r\n  const [hasMore, setHasMore] = useState(true);\r\n\r\n  const [pageNumber, setPageNumber] = useState(2);\r\n\r\n  const socket = useRef();\r\n\r\n  const [newMessageReceived, setNewMessageReceived] = useState(null);\r\n  const [newMessageModal, showNewMessageModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.title = `Welcome, ${user.name.split(' ')[0]}`;\r\n\r\n    if (!socket.current) {\r\n      socket.current = io(baseUrl);\r\n    }\r\n\r\n    if (socket.current) {\r\n      socket.current.emit('join', { userId: user._id });\r\n\r\n      socket.on('newMsgReceived', async ({ newMsg }) => {\r\n        const { name, profilePicUrl } = await getUserInfo(newMsg.sender);\r\n\r\n        if (user.newMessagePopup) {\r\n          setNewMessageReceived({\r\n            ...newMsg,\r\n            senderName: name,\r\n            senderProfilePic,\r\n            profilePicUrl,\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    //clean up\r\n\r\n    return () => {\r\n      if (socket.current) {\r\n        socket.current.emit('disconnect');\r\n        socket.current.off();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    showToastr && setTimeout(() => setShowToastr(false), 3000);\r\n  }, [showToastr]);\r\n\r\n  const fetchDataOnScroll = async () => {\r\n    try {\r\n      const res = await axios.get(`${baseUrl}/api/posts`, {\r\n        headers: { Authorization: cookie.get('token') },\r\n        params: { pageNumber },\r\n      });\r\n\r\n      if (res.data.length === 0) setHasMore(false);\r\n\r\n      setPosts((prev) => [...prev, ...res.data]);\r\n      setPageNumber((prev) => prev + 1);\r\n    } catch (error) {\r\n      alert('Error fetching Posts');\r\n    }\r\n  };\r\n\r\n  if (posts.length === 0 || errorLoading) return <NoPosts />;\r\n\r\n  return (\r\n    <>\r\n      {showToastr && <PostDeleteToastr />}\r\n\r\n      {newMessageModal && newMessageReceived !== null && (\r\n        <MessageNotificationModal\r\n          socket={socket.current}\r\n          newMessageModal={newMessageModal}\r\n          showNewMessageModal={showNewMessageModal}\r\n          newMessageReceived={newMessageReceived}\r\n          username={user.username}\r\n        />\r\n      )}\r\n      <Segment>\r\n        <CreatePost user={user} setPosts={setPosts} />\r\n\r\n        <InfiniteScroll\r\n          hasMore={hasMore}\r\n          next={fetchDataOnScroll}\r\n          loader={<PlaceHolderPosts />}\r\n          endMessage={<EndMessage />}\r\n          dataLength={posts.length}\r\n        >\r\n          {posts.map((post) => (\r\n            <CardPost\r\n              key={post._id}\r\n              post={post}\r\n              user={user}\r\n              setPosts={setPosts}\r\n              setShowToastr={setShowToastr}\r\n            />\r\n          ))}\r\n        </InfiniteScroll>\r\n      </Segment>\r\n    </>\r\n  );\r\n}\r\n\r\nIndex.getInitialProps = async (ctx) => {\r\n  try {\r\n    const { token } = parseCookies(ctx);\r\n\r\n    const res = await axios.get(`${baseUrl}/api/posts`, {\r\n      headers: { Authorization: token },\r\n      params: { pageNumber: 1 },\r\n    });\r\n\r\n    return { postsData: res.data };\r\n  } catch (error) {\r\n    return { errorLoading: true };\r\n  }\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}