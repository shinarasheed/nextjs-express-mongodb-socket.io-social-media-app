{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ADVANCED REACT\\\\mernChat\\\\components\\\\Post\\\\ImageModal.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Modal, Grid, Image, Card, Icon, Divider } from \"semantic-ui-react\";\nimport PostComments from \"./PostComments\";\nimport CommentInputField from \"./CommentInputField\";\nimport calculateTime from \"../../utils/calculateTime\";\nimport Link from \"next/link\";\nimport { likePost } from \"../../utils/postActions\";\nimport LikesList from \"./LikesList\";\n\nfunction ImageModal({\n  post,\n  user,\n  setLikes,\n  likes,\n  isLiked,\n  comments,\n  setComments\n}) {\n  return __jsx(React.Fragment, null, __jsx(Grid, {\n    columns: 2,\n    stackable: true,\n    relaxed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Content, {\n    image: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, __jsx(Image, {\n    wrapped: true,\n    size: \"large\",\n    src: post.picUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, __jsx(Card.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(Image, {\n    floated: \"left\",\n    avatar: true,\n    src: post.user.profilePicUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }), __jsx(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, __jsx(Link, {\n    href: `/${post.user.username}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }\n  }, post.user.name))), __jsx(Card.Meta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, calculateTime(post.createdAt)), post.location && __jsx(Card.Meta, {\n    content: post.location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }\n  }), __jsx(Card.Description, {\n    style: {\n      fontSize: \"17px\",\n      letterSpacing: \"0.1px\",\n      wordSpacing: \"0.35px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, post.text)), __jsx(Card.Content, {\n    extra: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    name: isLiked ? \"heart\" : \"heart outline\",\n    color: \"red\",\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: () => likePost(post._id, user._id, setLikes, isLiked ? false : true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }), __jsx(LikesList, {\n    postId: post._id,\n    trigger: likes.length > 0 && __jsx(\"span\", {\n      className: \"spanLikesList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, `${likes.length} ${likes.length === 1 ? \"like\" : \"likes\"}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }), __jsx(Divider, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    style: {\n      overflow: \"auto\",\n      height: comments.length > 2 ? \"200px\" : \"60px\",\n      marginBottom: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, comments.length > 0 && comments.map(comment => __jsx(PostComments, {\n    key: comment._id,\n    comment: comment,\n    postId: post._id,\n    user: user,\n    setComments: setComments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }))), __jsx(CommentInputField, {\n    postId: post._id,\n    user: user,\n    setComments: setComments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default ImageModal;","map":{"version":3,"sources":["C:/Users/User/Desktop/ADVANCED REACT/mernChat/components/Post/ImageModal.js"],"names":["React","Modal","Grid","Image","Card","Icon","Divider","PostComments","CommentInputField","calculateTime","Link","likePost","LikesList","ImageModal","post","user","setLikes","likes","isLiked","comments","setComments","picUrl","profilePicUrl","username","name","createdAt","location","fontSize","letterSpacing","wordSpacing","text","cursor","_id","length","overflow","height","marginBottom","map","comment"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,IAA7B,EAAmCC,IAAnC,EAAyCC,OAAzC,QAAwD,mBAAxD;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,UAAT,CAAoB;AAClBC,EAAAA,IADkB;AAElBC,EAAAA,IAFkB;AAGlBC,EAAAA,QAHkB;AAIlBC,EAAAA,KAJkB;AAKlBC,EAAAA,OALkB;AAMlBC,EAAAA,QANkB;AAOlBC,EAAAA;AAPkB,CAApB,EAQG;AACD,SACE,4BACE,MAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAkB,IAAA,SAAS,MAA3B;AAA4B,IAAA,OAAO,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,OAAP;AAAe,IAAA,KAAK,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,OAAO,MAAd;AAAe,IAAA,IAAI,EAAC,OAApB;AAA4B,IAAA,GAAG,EAAEN,IAAI,CAACO,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAOE,MAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,OAAO,EAAC,MAAf;AAAsB,IAAA,MAAM,MAA5B;AAA6B,IAAA,GAAG,EAAEP,IAAI,CAACC,IAAL,CAAUO,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,MAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,IAAGR,IAAI,CAACC,IAAL,CAAUQ,QAAS,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIT,IAAI,CAACC,IAAL,CAAUS,IAAd,CADF,CADF,CAHF,EASE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYf,aAAa,CAACK,IAAI,CAACW,SAAN,CAAzB,CATF,EAWGX,IAAI,CAACY,QAAL,IAAiB,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,OAAO,EAAEZ,IAAI,CAACY,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXpB,EAaE,MAAC,IAAD,CAAM,WAAN;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,MADL;AAELC,MAAAA,aAAa,EAAE,OAFV;AAGLC,MAAAA,WAAW,EAAE;AAHR,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGf,IAAI,CAACgB,IANR,CAbF,CADF,EAwBE,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,IAAI,EAAEZ,OAAO,GAAG,OAAH,GAAa,eAD5B;AAEE,IAAA,KAAK,EAAC,KAFR;AAGE,IAAA,KAAK,EAAE;AAAEa,MAAAA,MAAM,EAAE;AAAV,KAHT;AAIE,IAAA,OAAO,EAAE,MACPpB,QAAQ,CAACG,IAAI,CAACkB,GAAN,EAAWjB,IAAI,CAACiB,GAAhB,EAAqBhB,QAArB,EAA+BE,OAAO,GAAG,KAAH,GAAW,IAAjD,CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,MAAC,SAAD;AACE,IAAA,MAAM,EAAEJ,IAAI,CAACkB,GADf;AAEE,IAAA,OAAO,EACLf,KAAK,CAACgB,MAAN,GAAe,CAAf,IACE;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,GAAEhB,KAAK,CAACgB,MAAO,IAAGhB,KAAK,CAACgB,MAAN,KAAiB,CAAjB,GAAqB,MAArB,GAA8B,OAAQ,EAD5D,CAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAqBE,MAAC,OAAD;AAAS,IAAA,MAAM,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,EAuBE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,MADL;AAELC,MAAAA,MAAM,EAAEhB,QAAQ,CAACc,MAAT,GAAkB,CAAlB,GAAsB,OAAtB,GAAgC,MAFnC;AAGLG,MAAAA,YAAY,EAAE;AAHT,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGjB,QAAQ,CAACc,MAAT,GAAkB,CAAlB,IACCd,QAAQ,CAACkB,GAAT,CAAaC,OAAO,IAClB,MAAC,YAAD;AACE,IAAA,GAAG,EAAEA,OAAO,CAACN,GADf;AAEE,IAAA,OAAO,EAAEM,OAFX;AAGE,IAAA,MAAM,EAAExB,IAAI,CAACkB,GAHf;AAIE,IAAA,IAAI,EAAEjB,IAJR;AAKE,IAAA,WAAW,EAAEK,WALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPJ,CAvBF,EAyCE,MAAC,iBAAD;AACE,IAAA,MAAM,EAAEN,IAAI,CAACkB,GADf;AAEE,IAAA,IAAI,EAAEjB,IAFR;AAGE,IAAA,WAAW,EAAEK,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzCF,CAxBF,CADF,CAPF,CADF,CADF;AAsFD;;AAED,eAAeP,UAAf","sourcesContent":["import React from \"react\";\r\nimport { Modal, Grid, Image, Card, Icon, Divider } from \"semantic-ui-react\";\r\nimport PostComments from \"./PostComments\";\r\nimport CommentInputField from \"./CommentInputField\";\r\nimport calculateTime from \"../../utils/calculateTime\";\r\nimport Link from \"next/link\";\r\nimport { likePost } from \"../../utils/postActions\";\r\nimport LikesList from \"./LikesList\";\r\n\r\nfunction ImageModal({\r\n  post,\r\n  user,\r\n  setLikes,\r\n  likes,\r\n  isLiked,\r\n  comments,\r\n  setComments\r\n}) {\r\n  return (\r\n    <>\r\n      <Grid columns={2} stackable relaxed>\r\n        <Grid.Column>\r\n          <Modal.Content image>\r\n            <Image wrapped size=\"large\" src={post.picUrl} />\r\n          </Modal.Content>\r\n        </Grid.Column>\r\n\r\n        <Grid.Column>\r\n          <Card fluid>\r\n            <Card.Content>\r\n              <Image floated=\"left\" avatar src={post.user.profilePicUrl} />\r\n\r\n              <Card.Header>\r\n                <Link href={`/${post.user.username}`}>\r\n                  <a>{post.user.name}</a>\r\n                </Link>\r\n              </Card.Header>\r\n\r\n              <Card.Meta>{calculateTime(post.createdAt)}</Card.Meta>\r\n\r\n              {post.location && <Card.Meta content={post.location} />}\r\n\r\n              <Card.Description\r\n                style={{\r\n                  fontSize: \"17px\",\r\n                  letterSpacing: \"0.1px\",\r\n                  wordSpacing: \"0.35px\"\r\n                }}>\r\n                {post.text}\r\n              </Card.Description>\r\n            </Card.Content>\r\n\r\n            <Card.Content extra>\r\n              <Icon\r\n                name={isLiked ? \"heart\" : \"heart outline\"}\r\n                color=\"red\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() =>\r\n                  likePost(post._id, user._id, setLikes, isLiked ? false : true)\r\n                }\r\n              />\r\n\r\n              <LikesList\r\n                postId={post._id}\r\n                trigger={\r\n                  likes.length > 0 && (\r\n                    <span className=\"spanLikesList\">\r\n                      {`${likes.length} ${likes.length === 1 ? \"like\" : \"likes\"}`}\r\n                    </span>\r\n                  )\r\n                }\r\n              />\r\n\r\n              <Divider hidden />\r\n\r\n              <div\r\n                style={{\r\n                  overflow: \"auto\",\r\n                  height: comments.length > 2 ? \"200px\" : \"60px\",\r\n                  marginBottom: \"8px\"\r\n                }}>\r\n                {comments.length > 0 &&\r\n                  comments.map(comment => (\r\n                    <PostComments\r\n                      key={comment._id}\r\n                      comment={comment}\r\n                      postId={post._id}\r\n                      user={user}\r\n                      setComments={setComments}\r\n                    />\r\n                  ))}\r\n              </div>\r\n\r\n              <CommentInputField\r\n                postId={post._id}\r\n                user={user}\r\n                setComments={setComments}\r\n              />\r\n            </Card.Content>\r\n          </Card>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ImageModal;\r\n"]},"metadata":{},"sourceType":"module"}