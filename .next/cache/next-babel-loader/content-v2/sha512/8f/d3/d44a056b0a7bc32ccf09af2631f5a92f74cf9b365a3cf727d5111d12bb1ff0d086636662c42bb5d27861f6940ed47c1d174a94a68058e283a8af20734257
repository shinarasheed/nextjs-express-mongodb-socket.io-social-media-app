{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\REACT\\\\mernChat\\\\components\\\\Chats\\\\ChatListSearch.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { List, Image, Search } from 'semantic-ui-react';\nimport axios from 'axios';\nimport cookie from 'js-cookie';\nimport Router from 'next/router';\nimport { useRouter } from 'next/router';\nimport baseUrl from '../../utils/baseUrl';\nlet cancel;\n\nfunction ChatListSearch({\n  chats,\n  setChats\n}) {\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: results,\n    1: setResults\n  } = useState([]);\n  const router = useRouter();\n\n  const handleChange = async e => {\n    const {\n      value\n    } = e.target;\n    setText(value);\n    setLoading(true);\n\n    try {\n      cancel && cancel();\n      const CancelToken = axios.CancelToken;\n      const token = cookie.get('token');\n      const res = await axios.get(`${baseUrl}/api/search/${value}`, {\n        headers: {\n          Authorization: token\n        },\n        cancelToken: new CancelToken(canceler => {\n          cancel = canceler;\n        })\n      });\n      if (res.data.length === 0) return setLoading(false);\n      setResults(res.data);\n    } catch (error) {\n      alert('Error Searching');\n    }\n\n    setLoading(false);\n  };\n\n  const addChat = () => {\n    const alreadyInChats = chats.length > 0 && chats.filter(chat => chat.messagesWith === result._id).length > 0;\n\n    if (alreadyInChats) {\n      return router.push(`/messages?message=${result._id}`);\n    } else {\n      const newChat = {\n        messagesWith: result._id,\n        name: result.name,\n        profilePicUrl: result.profilePicUrl,\n        lastMessage: '',\n        date: Date.now()\n      };\n      setChats(prev => [newChat, ...prev]);\n      return router.push(`/messages?message=${result._id}`);\n    }\n  };\n\n  return __jsx(Search, {\n    onBlur: () => {\n      results.length > 0 && setResults([]);\n      loading && setLoading(false);\n      setText('');\n    },\n    loading: loading,\n    value: text,\n    resultRenderer: ResultRenderer,\n    results: results,\n    onSearchChange: handleChange,\n    minCharacters: 1,\n    onResultSelect: (e, data) => addChat(data.result),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  });\n}\n\nconst ResultRenderer = ({\n  _id,\n  profilePicUrl,\n  name\n}) => {\n  return __jsx(List, {\n    key: _id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, __jsx(List.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, __jsx(Image, {\n    src: profilePicUrl,\n    alt: \"ProfilePic\",\n    avatar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), __jsx(List.Content, {\n    header: name,\n    as: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ChatListSearch;","map":{"version":3,"sources":["C:/Users/User/Desktop/REACT/mernChat/components/Chats/ChatListSearch.js"],"names":["React","useState","List","Image","Search","axios","cookie","Router","useRouter","baseUrl","cancel","ChatListSearch","chats","setChats","text","setText","loading","setLoading","results","setResults","router","handleChange","e","value","target","CancelToken","token","get","res","headers","Authorization","cancelToken","canceler","data","length","error","alert","addChat","alreadyInChats","filter","chat","messagesWith","result","_id","push","newChat","name","profilePicUrl","lastMessage","date","Date","now","prev","ResultRenderer"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { List, Image, Search } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport cookie from 'js-cookie';\r\nimport Router from 'next/router';\r\nimport { useRouter } from 'next/router';\r\nimport baseUrl from '../../utils/baseUrl';\r\nlet cancel;\r\n\r\nfunction ChatListSearch({ chats, setChats }) {\r\n  const [text, setText] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [results, setResults] = useState([]);\r\n  const router = useRouter();\r\n\r\n  const handleChange = async (e) => {\r\n    const { value } = e.target;\r\n    setText(value);\r\n    setLoading(true);\r\n\r\n    try {\r\n      cancel && cancel();\r\n      const CancelToken = axios.CancelToken;\r\n      const token = cookie.get('token');\r\n\r\n      const res = await axios.get(`${baseUrl}/api/search/${value}`, {\r\n        headers: { Authorization: token },\r\n        cancelToken: new CancelToken((canceler) => {\r\n          cancel = canceler;\r\n        }),\r\n      });\r\n\r\n      if (res.data.length === 0) return setLoading(false);\r\n\r\n      setResults(res.data);\r\n    } catch (error) {\r\n      alert('Error Searching');\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const addChat = () => {\r\n    const alreadyInChats =\r\n      chats.length > 0 &&\r\n      chats.filter((chat) => chat.messagesWith === result._id).length > 0;\r\n\r\n    if (alreadyInChats) {\r\n      return router.push(`/messages?message=${result._id}`);\r\n    } else {\r\n      const newChat = {\r\n        messagesWith: result._id,\r\n        name: result.name,\r\n        profilePicUrl: result.profilePicUrl,\r\n        lastMessage: '',\r\n        date: Date.now(),\r\n      };\r\n\r\n      setChats((prev) => [newChat, ...prev]);\r\n      return router.push(`/messages?message=${result._id}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Search\r\n      onBlur={() => {\r\n        results.length > 0 && setResults([]);\r\n        loading && setLoading(false);\r\n        setText('');\r\n      }}\r\n      loading={loading}\r\n      value={text}\r\n      resultRenderer={ResultRenderer}\r\n      results={results}\r\n      onSearchChange={handleChange}\r\n      minCharacters={1}\r\n      onResultSelect={(e, data) => addChat(data.result)}\r\n    />\r\n  );\r\n}\r\n\r\nconst ResultRenderer = ({ _id, profilePicUrl, name }) => {\r\n  return (\r\n    <List key={_id}>\r\n      <List.Item>\r\n        <Image src={profilePicUrl} alt=\"ProfilePic\" avatar />\r\n        <List.Content header={name} as=\"a\" />\r\n      </List.Item>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default ChatListSearch;\r\n"]},"metadata":{},"sourceType":"module"}